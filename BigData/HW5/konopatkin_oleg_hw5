{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Алгоритмы интеллектуальной обработки больших объемов данных\n",
    "## Домашнее задание №5 - Алгоритмы кластеризации\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "###### <hr\\>\n",
    "**Общая информация**\n",
    "\n",
    "**Срок сдачи:** 15 декабря 2018, 06:00 <br\\>\n",
    "**Штраф за опоздание:** -2 балла после 06:00 17 декабря, -4 балла после 06:00 24 декабря, -6 баллов после 06:00 31 декабря -8 баллов  после 06:00 7 января\n",
    "\n",
    "\n",
    "Используйте данный Ipython Notebook при оформлении домашнего задания.\n",
    "<hr\\>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Из чего состоит задание:**\n",
    "\n",
    "###### Теоретические вопросы (2 балла)\n",
    "\n",
    "###### Реализация алгоритма кластеризации (6 баллов)\n",
    "\n",
    "###### Боевое применение (2 балла)\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Штрафные баллы:**\n",
    "\n",
    "1. Невыполнение PEP8 -1 балл\n",
    "2. Отсутствие фамилии в имени скрипта (скрипт должен называться по аналогии со stroykova_hw4.ipynb) -1 балл\n",
    "3. Все строчки должны быть выполнены. Нужно, чтобы output команды можно было увидеть уже в git'е. В противном случае -1 балл\n",
    "4. При оформлении ДЗ нужно пользоваться данным файлом в качестве шаблона. Не нужно удалять и видоизменять написанный код и текст. В противном случае -1 балл"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Определяем, что вам досталось"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Укажите свою фамилию на русском языке в поле ниже."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Имплементируйте алгоритм кластеризации Hierarchical clustering с поддержкой single-linkage, complete-linkage, average-linkage (параметры - число кластеров, linkage)\n"
     ]
    }
   ],
   "source": [
    "import hashlib\n",
    "\n",
    "def lucky_hash(text):\n",
    "    return int(hashlib.md5(text.encode('utf-8')).hexdigest()[:8], 16) \n",
    "\n",
    "USER_NAME = u\"Конопаткин\".lower()\n",
    "\n",
    "ALGORITHMS = [\n",
    "    u\"Gaussian Mixture Model с использованием maximum a-posteriori для выбора кластера (параметр - число кластеров)\",\n",
    "    u\"Hierarchical clustering с поддержкой single-linkage, complete-linkage, average-linkage (параметры - число кластеров, linkage)\",]\n",
    "\n",
    "print (\"Имплементируйте алгоритм кластеризации %s\"\\\n",
    "% (\n",
    "    ALGORITHMS[lucky_hash(USER_NAME[::-1]) % 2]\n",
    ") )"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Не стоит переживать из-за Вашего варианта. Технически оба алгоритма несложно реализовать.  EM алгоритма бояться не стоит, Вам будет нужно просто реализовать уже выведенные формулы для E и M шагов."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Populating the interactive namespace from numpy and matplotlib\n"
     ]
    }
   ],
   "source": [
    "import time\n",
    "import pandas as pd\n",
    "import pylab as pl\n",
    "import numpy as np\n",
    "import scipy.spatial as ss\n",
    "import sklearn.cluster as sc\n",
    "import sklearn.manifold as sm\n",
    "import sklearn.datasets as ds\n",
    "import sklearn.metrics as smt\n",
    "from sklearn.mixture import GaussianMixture\n",
    "from sklearn.cluster import AgglomerativeClustering\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "%matplotlib inline\n",
    "\n",
    "plt.style.use('ggplot')\n",
    "plt.rcParams['figure.figsize'] = (12,5)\n",
    "\n",
    "# Plotting config\n",
    "%pylab inline\n",
    "\n",
    "%load_ext pycodestyle_magic"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Теоретическое введение\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Основная задача кластерного анализа — разбиение исходного набора объектов на группы (кластеры) таким образом, чтобы объекты в группе были похожи друг на друга, а объекты из разных групп - отличались. \n",
    "\n",
    "В этой работе мы будем реализовывать один из двух популярных методов кластеризации: разделение смеси нормальных распределений или агломеративную кластеризацию. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "## Смесь нормальных распределений\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "Предполагаем, что наши данные порождены смесью $k$ нормальных распределений, то есть \n",
    "\n",
    "$$ p(\\mathbf{x}) = \\sum_k \\pi_k \\mathcal{N}(\\mathbf{x} | \\mathbf{\\mu}_k, \\mathbf{\\Sigma}_k) $$,\n",
    "\n",
    "\n",
    "где $\\mathcal{N}$ - многомерное нормальное распределение размерности ${D}$:"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "$$\\mathcal{N(\\mathbf{x} | \\mathbf{\\mu}, \\mathbf{\\Sigma}}) = \\frac{1}{(2 \\pi)^{D/2}} \\frac{1}{|\\mathbf{\\Sigma}|^{1/2}} \\exp \\left\\{-\\frac{1}{2}(\\mathbf{x} - \\mathbf{\\mu})^T \\mathbf{\\Sigma^{-1}} (\\mathbf{x} - \\mathbf{\\mu})\\right\\}$$\n",
    "\n",
    "**Параметры**  \n",
    "\n",
    "\n",
    "${D}$-мерный вектор средних\n",
    "\n",
    "$$\\mathbf{\\mu}$$\n",
    "\n",
    "$D \\times D$-мерная матрица ковариации   (симметричная)\n",
    "\n",
    "\n",
    "$$\\mathbf{\\Sigma} = E[(\\mathbf{x} - \\mathbf{\\mu})(\\mathbf{x} - \\mathbf{\\mu})^T]$$\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "Необходимо оценить параметры $\\pi_k, \\mathbf{\\mu_k}, \\mathbf{\\Sigma_k} $ для всех компонент смеси.  Сделать это можно с помощью EM алгоритма - алгоритма, который находит оценку максимального правдоподобия в задаче со скрытыми переменными. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Expectation Maximization\n",
    "\n",
    "**I** До цикла проинциализировать случайно  $\\mu_k, \\Sigma_k, \\pi_k$ ($\\pi_k$ должны суммироваться в 1)\n",
    "\n",
    "**E** Expectation: при фиксированных $\\mu_k, \\Sigma_k, \\pi_k$\n",
    "$$\n",
    "p(z_k = 1| x_n ) = \\gamma(z_{nk}) = \\frac{\\pi_k \\mathcal{N} (\\mathbf{x}_n | \\mu_k, \\Sigma_k)}{\\sum_{j=1}^K \\pi_j \\mathcal{N} (\\mathbf{x}_n | \\mu_j, \\Sigma_j)}\n",
    "$$\n",
    "**M** Maximization: при фиксированных $\\gamma(z_{nk})$\n",
    "$$\n",
    "N_k = \\sum_{n=1}^N \\gamma(z_{nk}), \\;\\; \\mu_k = \\frac 1 {N_k} \\sum_{n=1}^N \\gamma(z_{nk}) \\mathbf{x}_n\n",
    "$$\n",
    "$$\n",
    "\\Sigma_k = \\frac 1 {N_k} \\sum_{n=1}^N \\gamma(z_{nk}) (\\mathbf{x}_n - \\mu_k)(\\mathbf{x}_n - \\mu_k)^T\n",
    "$$\n",
    "$$\n",
    "\\pi_k = \\frac{N_k}{N}\n",
    "$$\n",
    "**S** Остановиться при достижении сходимости"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Номер кластера для $n$ объекта будем брать по принципу maximum a-posteriori, то есть относить объект к тому кластеру, у которого максимальна апостериорная вероятность:\n",
    "$$ k_n =  \\arg\\underset{k}\\max  p(z_k = 1| x_n ) =  \\arg\\underset{k}\\max \\gamma(z_{nk}) $$"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "## Агломеративная кластеризация"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Иерархические алгоритмы кластеризации строят на выборке систему вложенных разбиений.  Наиболее часто испоьзуемые иерархические алгоритмы - агломеративные алгоритмы, которые строят ирархию по восходящей, то есть от момента, когда все элементы являются отдельными кластерами, до того момента, пока вся выборка не станет одним кластером."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Сам алгоритм описать можно примерно так:\n",
    "\n",
    "* начинаем с ситуации, когда каждый объект - отдельный кластер\n",
    "* на каждом шаге совмещаем два наиболее близких кластера\n",
    "* останавливаемся, когда получаем требуемое количество или единственный кластер"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "В данной работе Вам предлагается реализовать три варианта расстояний между кластерами, по которым Вы определяете пару для слияния: \n",
    "* Single linkage\n",
    "$$ d_{min}(C_i, C_j) = \\min_{\\mathbf{x} \\in C_i, \\mathbf{x}' \\in C_j} \\|\\mathbf{x} -\\mathbf{x}' \\| $$\n",
    "\n",
    "* Complete linkage\n",
    "$$ d_{max}(C_i, C_j) = \\max_{\\mathbf{x} \\in C_i, \\mathbf{x}' \\in C_j} \\|\\mathbf{x} -\\mathbf{x}' \\| $$\n",
    "\n",
    "* Average linkage\n",
    "$$ d_{avg}(C_i, C_j) = \\frac{1}{n_i n_j}\\sum_{\\mathbf{x} \\in C_i}\\sum_{\\mathbf{x}' \\in C_j} \\|\\mathbf{x} -\\mathbf{x}' \\| $$\n",
    "\n",
    "Для простоты будем использовать евклидово расстояние между объектами.\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Для того, чтобы на втором этапе нам не пересчитывать заново расстояния между всеми парами кластеров, можно использовать Формулы Ланса-Вильямса, которые позволяют посчитать расстояние между кластерами после объединения, используя только расстояния между кластерами до объедения.  Таким образом, достаточно будет посчитать расстояния только между всеми одноэлементными кластерами (первый этап), а затем пересчитывать расстояния при их объединении через \n",
    "формулы Ланса-Вильямса. \n",
    "\n",
    "Общая  формула выглядит так:\n",
    "$$ d(C_i \\cup C_j, C_k) = a_i \\cdot d(C_i, C_k) + a_j \\cdot d(C_j, C_k) + b \\cdot d(C_i, C_j) + c \\cdot |d(C_i, C_k) - d(C_j, C_k)|$$\n",
    "\n",
    "Можно показать, что все относительно разумные кластерные расстояния можно описать данной формулой. \n",
    "\n",
    "Для интересущих нас linkage:\n",
    "\n",
    "* single-linkage       $a_i = \\frac{1}{2}, a_j =  \\frac{1}{2}, b = 0, c =  - \\frac{1}{2} $\n",
    "\n",
    "* complete-linkage     $a_i = \\frac{1}{2}, a_j =  \\frac{1}{2}, b = 0, c =   \\frac{1}{2} $\n",
    "\n",
    "* average-linkage       $a_i = \\frac{|C_i|}{|C_i \\cup C_j|}, a_j =  \\frac{|C_j|}{|C_i \\cup C_j|}, b = 0, c = 0 $\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Теоретические вопросы (2 балла)\n",
    "В этой части Вам будут предложены теоретичские вопросы и задачи по теме. Вы, конечно, можете списать их у своего товарища или найти решение в интернете, но учтите, что они обязательно войдут в теоретический коллоквиум. Лучше разобраться в теме сейчас и успешно ответить на коллоквиуме, чем списать, не разобравшись в материале, и быть терзаемым совестью. \n",
    "\n",
    "\n",
    "Формулы надо оформлять в формате **LaTeX**."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<b>Задача 1. Сходимость kmeans.</b>\n",
    "\n",
    "Метод kmeans является частным случаем EM алгоритма и наиболее простым в обосновании сходимости. Докажите, что kmeans всегда сходится, и итераций не будет превышать $k^N$, где $k$ $-$ число кластеров, $N$ $-$ число объектов\n",
    "\n",
    "Подсказка: Вам стоит рассмотреть функционал, который минимизирует алгоритм, и подумать, как он изменяется на E шаге и на M шаге.\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "***Ваше решение здесь***\n",
    "\n",
    "kmeans минимизирует среднее внутрикластерное расстояние, или среднее расстояние до центроид:\n",
    "\n",
    "$$R = \\frac{1}{N}\\sum_{i=1}^{N}||\\mathbf{x_i} - \\mathbf{c_{x_i}}|| = \\frac{1}{N}\\sum_{i=1}^{N}\\sum_{\\mathbf{x} \\in C_i} ||\\mathbf{x} - \\mathbf{c_i}||$$\n",
    "\n",
    "Очевидно, что $R > 0$\n",
    "\n",
    "На каждом Е-шаге объект присваивается к кластеру, соответствующему ближайшему центроиду, что очевидно уменьшает левую сумму. <br>\n",
    "На каждом M-шаге идёт пересчёт центроид, что минимизирует каждую внутреннюю сумму в правой сумме, т.к.\n",
    "\n",
    "$$\\frac{d}{d\\mathbf{x}}\\left( \\frac{1}{N}\\sum_{i=1}^{N}\\sum_{\\mathbf{x} \\in C_i} ||\\mathbf{x} - \\mathbf{c_i}|| \\right) = \\frac{d}{d\\mathbf{x}}\\left( \\frac{1}{N}\\sum_{i=1}^{N}\\sum_{\\mathbf{x} \\in C_i} (\\mathbf{x} - \\mathbf{c_i}) (\\mathbf{x} - \\mathbf{c_i}) \\right) = \\frac{2}{N}\\sum_{i=1}^{N}\\sum_{\\mathbf{x} \\in C_i} (\\mathbf{x} - \\mathbf{c_i}) = 0$$\n",
    "\n",
    "$$\\mathbf{c_i} = \\frac{1}{N_{C_i}}\\sum_{\\mathbf{x} \\in C_i} \\mathbf{x}$$\n",
    "\n",
    "Получаем монотонную ограниченную последовательность $R_k$, которая, очевидно, сходится. <br>\n",
    "Поскольку алгоритм сходится, когда метки классов у всех объектов перестают меняться, одна итерация алгоритма однозначно переводит одно распределение меток в другое, а распределений из $k$ меток на $N$ объектов ровно $k^N$, число итераций до сходимости не может превышать $k^N$"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<b>Задача 2. Сходимость EM.</b>\n",
    "\n",
    "Разобравшись со сходимостью kmeans, можно догадаться и до ответа про EM алгоритм.\n",
    "\n",
    "При каком условии на правдоподобие системы EM алгоритм будет  сходиться?\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "***Ваше решение здесь***\n",
    "\n",
    "Если сопоставить kmeans и EM, получим, что $\\gamma(z_{nk}) = 1$ если объект $n$ принадлежит кластеру $k$, иначе $\\gamma(z_{nk}) = 0$,  <br> $\\mu_k$ - центроид класса $k$,  $N_k$ - число объектов в классе $k$,  $\\Sigma_k$ - среднее расстояние до центроида класса $k$.\n",
    "\n",
    "Получается, что если правдоподобие увеличивается с уменьшением ковариации $\\mathbf\\Sigma$, алгоритм будет сходиться?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<b>Задача 3. Формулы Ланса-Вильямса.</b>\n",
    "\n",
    "Формулы Ланса-Вильямса крайне удобны для быстрого пересчта расстояний в агломеративной кластеризации. Давайте докажем  формулы для single и complete linkage. \n",
    "\n",
    "Докажите, что:\n",
    "\n",
    "$d_{\\min}(U \\cup V, S) = \\frac{1}{2} d_{\\min}(U, S) + \\frac{1}{2} d_{\\min}(V, S)  - \\frac{1}{2} | d_{\\min}(U, S) - d_{\\min}(V, S) |  $\n",
    "\n",
    "\n",
    "$d_{\\max}(U \\cup V, S) = \\frac{1}{2} d_{\\max}(U, S) + \\frac{1}{2} d_{\\max}(V, S)  + \\frac{1}{2} | d_{\\max}(U, S) - d_{\\max}(V, S) |  $\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "***Ваше решение здесь***\n",
    "\n",
    "Пусть $d_{\\min}(U, S) < d_{\\min}(V, S)$, тогда\n",
    "\n",
    "$d_{\\min}(U \\cup V, S) = d_{\\min}(U, S) = \\frac{1}{2}(d_{\\min}(U, S) + d_{\\min}(V, S)) + \\frac{1}{2}(d_{\\min}(U, S) - d_{\\min}(V, S)) = \\frac{1}{2} d_{\\min}(U, S) + \\frac{1}{2} d_{\\min}(V, S)  - \\frac{1}{2} | d_{\\min}(U, S) - d_{\\min}(V, S) | $\n",
    "\n",
    "Иначе, если $d_{\\min}(U, S) \\ge d_{\\min}(V, S)$, то\n",
    "\n",
    "$d_{\\min}(U \\cup V, S) = d_{\\min}(V, S) = \\frac{1}{2}(d_{\\min}(U, S) + d_{\\min}(V, S)) - \\frac{1}{2}(d_{\\min}(U, S) - d_{\\min}(V, S)) = \\frac{1}{2} d_{\\min}(U, S) + \\frac{1}{2} d_{\\min}(V, S)  - \\frac{1}{2} | d_{\\min}(U, S) - d_{\\min}(V, S) | $\n",
    "\n",
    "<br>\n",
    "\n",
    "Аналогично, пусть $d_{\\max}(U, S) > d_{\\max}(V, S)$, тогда\n",
    "\n",
    "$d_{\\max}(U \\cup V, S) = d_{\\max}(U, S) = \\frac{1}{2} d_{\\max}(U, S) + \\frac{1}{2} d_{\\max}(V, S)  + \\frac{1}{2} | d_{\\max}(U, S) - d_{\\max}(V, S) | $\n",
    "\n",
    "Иначе, если $d_{\\max}(U, S) \\le d_{\\max}(V, S)$, то\n",
    "\n",
    "$d_{\\max}(U \\cup V, S) = d_{\\max}(V, S) = \\frac{1}{2} d_{\\max}(U, S) + \\frac{1}{2} d_{\\max}(V, S)  + \\frac{1}{2} | d_{\\max}(U, S) - d_{\\max}(V, S) | $"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Реализация алгоритма кластеризации  (6 баллов)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Алгоритм кластеризации должен удовлетворять следующему интерфейсу. Конструктор принимает набор параметров, необходимых для работы алгоритма кластеризации. Метод `fit` подсчитывает параметры модели и возвращает `self`. Метод `predict` возвращает вектор с индексами кластеров для поданных в него объектов `x`. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "#%%pycodestyle\n",
    "\n",
    "from sklearn.base import BaseEstimator, ClusterMixin\n",
    "from sklearn.metrics import pairwise_distances\n",
    "\n",
    "\n",
    "class Clustering(BaseEstimator, ClusterMixin):\n",
    "    \"\"\"\n",
    "    Implement clustering algorithm according\n",
    "    \"\"\"\n",
    "\n",
    "    def __init__(self, k=3, linkage='single', **kwargs):\n",
    "        \"\"\"\n",
    "        Please add necessary algoritm parameters to class constructor.\n",
    "        \"\"\"\n",
    "\n",
    "        self.k = k\n",
    "        if linkage == 'single':\n",
    "            self.dist_func = self.single_linkage\n",
    "        elif linkage == 'complete':\n",
    "            self.dist_func = self.complete_linkage\n",
    "        elif linkage == 'average':\n",
    "            self.dist_func = self.average_linkage\n",
    "        else:\n",
    "            raise ValueError(\"Invalid linkage \\\"%s\\\"\".format(linkage))\n",
    "\n",
    "        return\n",
    "\n",
    "    def single_linkage(self, U, V, S):\n",
    "        d_US = self.dists[U][S]\n",
    "        d_VS = self.dists[V][S]\n",
    "        return 0.5 * d_US + 0.5 * d_VS - 0.5 * abs(d_US - d_VS)\n",
    "\n",
    "    def complete_linkage(self, U, V, S):\n",
    "        d_US = self.dists[U][S]\n",
    "        d_VS = self.dists[V][S]\n",
    "        return 0.5 * d_US + 0.5 * d_VS + 0.5 * abs(d_US - d_VS)\n",
    "\n",
    "    def average_linkage(self, U, V, S):\n",
    "        a_U = self.linkage[self.cur_clust[U]][2]\n",
    "        a_V = self.linkage[self.cur_clust[V]][2]\n",
    "        a_UV = a_U + a_V\n",
    "        return a_U / a_UV * self.dists[U][S] + a_V / a_UV * self.dists[V][S]\n",
    "\n",
    "    def fit(self, x, y=None):\n",
    "        \"\"\"\n",
    "        Use data matrix x to compute model parameters\n",
    "        \"\"\"\n",
    "        self.dists = pairwise_distances(x, x)\n",
    "        self.dists[range(x.shape[0]), range(x.shape[0])] = np.inf\n",
    "\n",
    "        # первые 2 числа - номера склеиваемых кластеров, или -1 и номер отдельной вершины\n",
    "        # третье - размер кластера, четвёртое - расстояние между склеиваемыми\n",
    "        self.linkage = [[-1, i, 1, 0] for i in range(x.shape[0])]\n",
    "        self.cur_clust = np.arange(x.shape[0])\n",
    "\n",
    "        for i in range(x.shape[0], x.shape[0] * 2 - 1):\n",
    "            u, v = np.unravel_index(np.argmin(self.dists, axis=None), self.dists.shape)\n",
    "            dist = self.dists[u, v]\n",
    "            U, V = self.cur_clust[u], self.cur_clust[v]\n",
    "\n",
    "            mask = np.ones(self.cur_clust.shape, dtype=bool)\n",
    "            mask[[u, v]] = False\n",
    "\n",
    "            new_dists = np.apply_along_axis(lambda S: self.dist_func(u, v, S), 0, mask)\n",
    "\n",
    "            self.dists = self.dists[mask]\n",
    "            self.dists = self.dists[:, mask]\n",
    "            self.dists = np.append(self.dists, new_dists.reshape(-1, 1), axis=1)\n",
    "            new_dists = np.append(new_dists, [np.inf])\n",
    "            self.dists = np.append(self.dists, new_dists.reshape(1, -1), axis=0)\n",
    "\n",
    "            self.linkage.append([U, V, dist, self.linkage[U][2] + self.linkage[V][2]])\n",
    "            self.cur_clust = self.cur_clust[mask]\n",
    "            self.cur_clust = np.append(self.cur_clust, [i])\n",
    "\n",
    "        return self\n",
    "\n",
    "    def predict(self, x, k=None):\n",
    "        \"\"\"\n",
    "        Using computed model parameters predict cluster\n",
    "        for all objects from x\n",
    "        \"\"\"\n",
    "        if k is None:\n",
    "            k = self.k\n",
    "\n",
    "        labels = [None for i in range(x.shape[0])]\n",
    "\n",
    "        cur_heads = set(range(len(self.linkage) - k + 1))\n",
    "        cur = len(self.linkage) - k\n",
    "\n",
    "        cur_label = 0\n",
    "        while cur > 0:\n",
    "            if cur in cur_heads:\n",
    "                cur_elems = {cur}\n",
    "                while len(cur_elems) > 0:\n",
    "                    elem = cur_elems.pop()\n",
    "                    cur_heads.remove(elem)\n",
    "                    U, V = self.linkage[elem][:2]\n",
    "                    if U == -1:\n",
    "                        labels[V] = cur_label\n",
    "                    else:\n",
    "                        cur_elems |= {U, V}\n",
    "                cur_label += 1\n",
    "            cur -= 1\n",
    "\n",
    "        return labels\n",
    "\n",
    "    def fit_predict(self, x, y=None):\n",
    "        self.fit(x, y)\n",
    "        return self.predict(x)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Сначала проверим реализованный алгоритм кластеризации на классическом наборе данных [Iris](http://www.wikiwand.com/en/Iris_flower_data_set). Загрузим данные (они включены в библиотеку sklearn) и посмотрим на то, как они выглядят в двух проекциях (для простоты используем 2 класса из 3)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAmcAAAFDCAYAAAB/Z6msAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAIABJREFUeJzs3Xd8U9X7wPFP23TTssree29kyN4o66vAQb+iIirqV9x7\n4k/cOFBxISJDFI8MRQSZAiogS6Yge5QCpZRVupP8/kgakiZtkzZN2vK8Xy9e5J57cu5zG7h9cu8Z\nAWazGSGEEEIIUTQE+jsAIYQQQghxlSRnQgghhBBFiCRnQgghhBBFiCRnQgghhBBFiCRnQgghhBBF\niCRnQgghhBBFiCRnQgghhBBFiCRnQgghhBBFiCRnQgghhBBFiMGXB1NKBQFbgJNa68HZ9o0BJgEn\nrUVTtNbT8mhSljcQ4toU4O8AvESuYUJce/K8fvk0OQMeAfYC0Tns/15rPd6TBuPi4goclKdiYmJI\nSEjw+XE9JXF6X3GJtSTHWbVq1UKKxj88uYYVl881v+T8ireSfH7eOjd3r18+e6yplKoODALyuhsm\nhBBCCHHN8uWds8nA00BULnWGK6W6A/uBx7TWJ7JXUEqNA8YBaK2JiYkpjFhzZTAY/HJcT0mc3ldc\nYpU4hRCi+PJJcqaUGgzEa623KqV65lDtZ+A7rXWaUup+YCbQO3slrfVUYKp10+yPW6jF5datxOl9\nxSXWkhxnSXusKYQQ2fnqsWYXYKhS6igwF+itlPrGvoLW+pzWOs26+SXQzkexCSGEEEIUGT5JzrTW\nz2mtq2utawO3AKu11qPt6yilqthtDsUycEAIIYQQ4pri69GaDpRSrwJbtNaLgIeVUkOBTCARGOPP\n2IQQQggh/MHnyZnWeg2wxvr6Zbvy54DnfB2PEEIIIURRIisECCGEEEIUIZKciWIv/sB2Dm9cSlrS\nRX+HIoQQQhSYX/ucCVEQZpOJFe8/yNFNywEIDotkwDNTqdqsk58jE0IIUVRtW/cPM97+kfjYc3To\n25L7XlFERoX7OywHcudMFFvHt/1mS8wAMlKvsGHm636MSAghRFF29mQiE8ZMYf/2o1xIuMzyuX/y\n0TPf5P1GH5PkTBRb52MPulUmhBBCAGxYsYOMtEyHsj9+2YrZbPZTRK5JciaKrarNOzuVVWsujzSF\nEEK4Vqa88wqSpctHERAQ4IdocibJmSi2KtZvSafbnyM4vJRlu0Frut77mp+jEkIIUVR1HtCa+i1q\nOpTd/sRQP0WTMxkQIIq1lkPuoemA0aQnJxFRRhbQFkIIkbPgEAPvLnyK3xZuIj42kY59W9C4bV1/\nh+VEkjNR7BlCwjCEhPk7DCGEEMVAWHgoN/y3m7/DyJUkZ0IIASilpgODgXitdXMX+58CbrNuGoAm\nQAWtdaJS6ihwGTACmVrr9r6JWghREklyJoQQFjOAKcAsVzu11pOASQBKqSHAY1rrRLsqvbTWCYUd\npBCi5JMBAUIIAWit1wGJeVa0uBX4rhDDEUJcw+TOmRBCeEApFQEMBMbbFZuB5UopM/CF1npqLu8f\nB4wD0FoTE+P+QBaDweBR/eJGzq94K8nn5+tzk+RMCCE8MwT4M9sjzS5a6zilVEVghVJqn/VOnBNr\n4paVvJkTEtx/EhoTE4Mn9YsbOb/irSSfn7fOrWrVqm7Vk8eaQgjhmVvI9khTax1n/TseWAh08ENc\nQogSQpIzIYRwk1KqNNAD+MmuLFIpFZX1GugP7PZPhEKIkkAeawohBKCU+g7oCcQopWKBCUAwgNb6\nc2u1m4DlWusrdm+tBCxUSoHlmvqt1vpXX8UthCg8xkwjaxdtIfZAPLWbVqHroLYEBhb+fS1JzoQQ\nAtBa3+pGnRlYptywLzsMtCqcqIQQ/vT2+K9Y9/MW2/bA/3bl0Ul3FPpx5bGmEEIIIUQ2Jw6eckjM\nAJbP/ZOEU+cL/diSnAkhhBBCZHP5fLJTmclkJulSSqEfW5IzIYQQQohsGrWtQ5VajnOb1WlSndqN\n3JsOoyAkORNCCCGEyCYoKJDXvnmEzgNaUal6eboNbsf/zXzQJ8eWAQHCb+L2bGTTt++SlBBL9Zbd\n6Hzni4SWKu3vsIQQQggAqtWtxITpD/p8gl1JzoRfJJ+PZ+mbd2NMTwVg/9oFpKdcof+Tn/o5MiGE\nEMK/5LGm8ItjW1fbEjNb2eYVGDPT/RSREEIIUTRIcib8Irx0eaey0KgyBAYF+yEaIYQQouiQ5Ez4\nRc22vajYoLVDWbsRDxMQEOCniIQQQoiiQfqcCb8IDDIweMIcDv7xM5mXE4hpdB2VG7f3d1hCCCGE\n30lyJvzGEBJG494jfT4KRgghhCjK5LGmEEIIIUQRIsmZEEIIIYqN1JQ0Du4+TmpKWp51jUYTh/ec\n4FJiktfjOBN7jhMHT3u9XZDHmkIIIYQoJtb9vIUPn57NlUspREaH8+ikO+g2uJ3Lugd2HuPVuz/l\nbNx5gkMM3PrIIP776KACx5CelsHb46fx55K/AWjWoT6vTH+QqLKRBW47i9w5Ey4d3byC5e/+j9+m\nPMnZw7v8HY4QQohrXHJSKpOfnMUV68LjVy6l8METM0lOSnVZf/KTszgbdx6AjPRMZk36iUO7TxQ4\njiXfrLMlZgB7Nh1kzgeLC9yuPUnOhJODfyxi+aT7ObppGQfWLWTRS6NIPLHf32EJIYS4hh3dd9Ip\nEUtOSuXYv3FOddNTMzi0xzkR27v1UIHj2LvFuY292wrerj1JzoSTPctmO2wbM9LYt0r7KRohhBAC\najaoQmh4iENZaHgINepXdqobEhZMzYZVnMobtKxV4Djqu2ijfvOCt2tPkjPhxGwyuyr1eRxCCCFE\nllKlI3jw9VsJCbOsJBMSFsyDr99KqdIRLus//PZooq39wAIDAxh+Xz8atalT4DiG3NmT1l0a27br\nNKnObY8PLnC79mRAgHDStP9/iT9w9Xl6oCGERr1G+jEiIYQQAvqP6kKnfq04su8kdRpXI7pcqRzr\nNu/QgNmb3+bf7UeoVCOGStWdlw3Mj7CIUN7Sj3P4n1gy0jJo2Lq211e3keRMOGnY42YMoeHsX7OA\n4LAIWgy6i/K1Guf9RiGEEKKQRZcrRavrG7lVNzQ8hJad3avrqbpNqxdKuyDJmchB3U43ULfTDf4O\nQwghhLjmSJ8zIYQQQogiRJIzIYQQQogiRJIzIYQQQogixKd9zpRSQcAW4KTWenC2faHALKAdcA4Y\npbU+6sv4RMmUcGQPx7euplRMVepePxhDSKi/QxJCCCFy5Os7Z48Ae3PYdzdwXmtdH/gAeNtnUYkS\na//aBSx4dhhb9GTWfPo0P0+4BWNmur/DEkIIIXLks+RMKVUdGARMy6HKMGCm9fU8oI9SyrsTh4hr\nzua574P56gS6Zw/t5NjmlX6MSAghhMidLx9rTgaeBqJy2F8NOAGgtc5USl0EygMJ9pWUUuOAcdZ6\nxMTEFFrAOTEYDH45rqckTki5mOBUFpCRnO/jyc/Uu4pSnEqp6cBgIF5r3dzF/p7AT8ARa9ECrfWr\n1n0DgQ+BIGCa1votnwQtRDGSnpbBtx8s5q+Vu6hYvRyjHx/i8XJKP329ms9f+h6z2UxAQAD3TxzF\nsLt6s3H5DuZPXUFqchr91PUMHdOLtJR05nywmE2rd1GlZgyjHx9KveY1XLZrMpl4/b4v2PLbHoKD\nDdw0rg+3PTbEG6edLz5JzpRSWRe8rdYLnCuu7pI5rRmktZ4KTM3an5Dg/Mu3sMXExOCP43pK4oTa\nHfpzeP0vtu3AoGDKN+6Y7+PJz9S78hNn1apVCykaZgBTsPR9zcnvLvrLBgGfAP2AWGCzUmqR1vqf\nwgpUiOLos5fmsnTO7wAc2RvLro37+er31yhbIdqt92dkZPDZi3Nt22azmc9enEv95jV59e5PMVmX\nHjyw4xiBAQHs23aElfM2AHB070l2bTzA13++TpR1SSd7E+/5nA3LtgOQlpLO7Hd/pkK18vRX1xfo\nnPPLV481uwBDlVJHgblAb6XUN9nqxAI1AJRSBqA0kOij+EQJ1e3e12jQ/SZCIqMpX6sJ/Z/6jOiK\nrr85iWub1nod+bvmdAAOaq0Pa63TsVzjhnk1OCGKObPZzKr5Gx3Kki+nsn7p3zm8w9m7j8xwWT7p\n4em2xCzLCr2eNT9tcihLupjMhuU7XLaxde0ep7Ifv/RfFxif3DnTWj8HPAe2RwNPaq1HZ6u2CLgT\n2ACMAFZrrWW1bVEgoZHR9Br/rr/DECVHZ6XUDiAOy3VsD3ZdMqxigY45NVCQrhlF6TFwYZDzK97y\nOr/wyDDSUzMcyipUjnH7Z1K9TmWX5WUrlOb0ccc78NFloggNDyUzI9mhvGIV18cLDjE4xVaqdKSt\nrq8/O78u36SUehXYorVeBHwFzFZKHcTy7fUWf8YmhBDZbANqaa2TlFI3Aj8CDXCzS0aWgnTNKC6P\nq/NLzq94y+v8Rtzfj69eX2Dbrlq7Ii271Xf7Z3L7U0OYM/lnp/KnPryL8Te8RvLlVAACgwIZendP\nGrevw+x3F9nq1ahfmaYd67g83uA7e/L9x0uvFgTA7U8NtdX11mfnbrcMnydnWus1wBrr65ftylOB\nkb6ORwgh3KG1vmT3eolS6lOlVAx2XTKsqmO5syaEsDPyfwOpXq8yf63cScVq5Rl0R3fCwj2bd3Lm\nX28wfsDrJF1MplTpCKYse4FK1WOY8uuLLPlmHanJ6fQd0YnGbetyXe8W1GpUlc2rd1OlVgUGje5O\nSGiwy3bvevYmKlYrx6LpvxFeKpS7XxhOi44NvHHa+SILnwshhBuUUpWBM1prs1KqA5Y+u+eAC0AD\npVQd4CSWu/7/9V+kQhRdnQe0pvOA1vl+f6XqMfyw5wOn8qq1K3LPiyOcyrve2JauN7Z1q+1Bt/dg\n0O098h2bN0lyJgpNemoS//w6h8jylWnQTfpHi6JNKfUd0BOIUUrFAhOAYACt9edY+sI+oJTKBFKA\nW6z9YjOVUuOBZVim0phu7YsmhBD5IsmZKBTHtq5m+Tv3YTabANgw8zVumfIbIWGl/ByZEK5prW/N\nY/8ULFNtuNq3BFhSGHEJIa49svC5KBRrP3vWlpgBpF5KZMOM1/wYkRBCCFE8SHImCkVa0nmnsoTD\n8qRHCCGEyIskZ6JQRJav4lRWrWUXP0QihBBCFC+SnIlC0f+pzzGERdi2y9dqQof/Pu3HiIQQQoji\nQQYEiEIRU7spY2ftIu6fTUSUrUCZKnX8HZIQQghRLEhyJgpV1aYd/B2CEEIIL0iMv8gfv2wlODSY\n7oPbERkdkfebCuDgrmPM/Xgp4ZGh3PH0f6hQpWyOda9cTuGPX7aSmpxO1xvbUr5yGQD++GUry/V6\najaowh1PDiUkLITMjEw2LNvBmdhzXNe7ObUaujdrvy9JciaEEEKIXB3ec4Inh0+yLZE05/3FfLj4\nOVsS5G0rf9jAu49+bdteNf8vPln+EnUaV3Oqe/7sJR4d8iZnTpwDYMZbC3n7hyf4ZdZals39E4BN\nK3fx67d/MGfb27zw34/Y/dcBAKa/Pp+nPhpLr5tyXA7XL6TPmRBCCCFy9d1HS2yJGUDCqfP89PXq\nQjveV6/Pd9g2GU18+sK3LusunrnGlpgBpFxJ49vJv7Bcr3eol3Qxmfcfn2lLzABMJjNfv7nQi5F7\nhyRn16j09BTO/Pu3v8PwCmNmOqlJF/wdhhBClFhn45ynR3JV5i1XLqc4lSWeueiy7tm4RKey+Nhz\nmE1mp/K4o2edyhJOX8Bsdq7rT5KcXYNWfvAQM0Y356eXRjBV1WfrvI/9HVK+7V46k9n3dmTW2HYs\nmnALVxJP+zskIYQocToPaOVc1t+5zFsat3EeRNZtSDuXdV2t1dnlxrZEl3NekWbU+BsIMjimPp36\ntSQgICCfkRYOSc6uMfGHdnF4g/0qM2a26skY09P9FlN+nT28i/Vfv0r6lUsAnN67md+nvujnqIQQ\nouQZcX9/bh7Xj4ioMMrERDH2+ZvpPqR9oR3v1VkPUadpdQACAgPo2K8VY565yWXdzgNac+/LIylb\nMZqIUmEMHdubUeMH8vYPT1CuYmkADMFB/PfRQXS9sS3Pf34f1epWIjjEQNcb2/LIpNsL7TzySwYE\nXGN2/vyly/KDGxbTqMfNPo6mYE7uXO9UFrvzTz9EIoQQJVuQIYhxE0YybsJInxwvLCKUz1a87Hb9\n4ff1Y/h9/RzK6jSuxrd/T3Kq2+WGNnS5oU2BYyxMcufsGlO9RTeX5dWadvJxJAVXpqrzbe8y1er6\nIRIhhBDCeyQ5u8Y07jOS8NLlHcpi6rWkVIWiN89LXmq270PNtr1s24bQcDrd/rwfIxJCCCEKTh5r\nXoNu/3IT23+aSuyOdTTpeyv1rh/k75DyJTAwiIHPTuPU3s1cOXeK6i27EhZdzt9hCSGEEAUiydk1\nqvWwcbQeNs7fYXhFlSbX+TsEIYQQwmvksaYQQgghRBEiyZkQQgghRBEiyZkQQgghRBEiydk16Hzs\nQZa9cx/fje/Jmk+eIvlCgsdtJBz9h6VvjuW78T1Z98XzpCU5LqthMmay9YeP+P6Rvvz4wgiObVnl\nrfCFEELkQ2pyGpcSk7zebnp6OlvX7iElJdWh/ELCJeKOxjvVP/bvSa5cSnYoS05K5ci+k051L1+4\nQsoVx3ZNJhPnzlzAZDI5lKdcSeXyhSv5PY0iRQYEXGOMGWksee1O2zJHl+NPcOnMcYa++r3bbaSn\nJPHLxDtIu2xZV23fqu+5kniGG577ylZn2/wpbLNbFmr5uw9w05sLianTzEtnIoQQwl1fv7mQH6et\nJC01g3Y9m/HslHuIKhtZ4HY/e+k7fpr+m22778jOPP7+nTwy+E0O7DgGQOnyUXz0y3PEn0zkxds/\nIi3ZsiJNtyHteOHz+5j08HRWLdgIZggNC2bC9Adp3K4u7z4ynQ3LdmAIDmLQ7T247/8U2//YxwdP\nziI+9hwVq5fn8ffupFWXRnwxQfPL7LVkZhjp1L8lT310NxGlwgp8fv4iydk15tQ/m5zWnzy9bwtJ\nCXGUinFvrrPY7etsiVmWE9vXkpZ0kdBSlqUyDv7+k8N+s8nIofW/SHImhBA+tmH5dr6fstS2vXXN\nHqa9Pp/H3r2jQO1eTExySMwAVv6wgcDAAFtiBnDx3GUmjJlCwqkLtsQM4PeftzKj9gJWzd9oK0tL\nzWDivZ9zw23dWP/rdgAy0jP58atV1G5cjelvzOfSecvdsfjYc7xx/xfc/cJwfvzq6tOZDct28M17\nP/tsNYPCIMnZNSYksrRTWWBQMIawiAK1YQgJIygk1LYdWqo0nHGsE+rifUIIIQrX9j/2uSjbW+B2\nl85Z57I8K6myF3voDJkZRqfylT9sdCpLuZLK1rV7nMr/XLrNlphluXT+Cn8s2eZU1xvn50/S5+wa\nU7F+S6q17OpQ1qTfrYSVKuN2G9Wad6ZSQ8d1yVoMGosh5Oot5Nb/eYCAgKv/vCLKVqJRr+H5jFoI\nIUR+1axfxbmsgXOZp9r3bO6yvEaDyk5l0eVKYQgOciqv26yGU1mQIZDajas5lTdoWYvgEMd7SsEh\nBuq3rOVUt2bD4rfqjT25c3YNGvjMVA6s+5Fzx/ZRpWkH6nQc6NH7AwIDGfTSbPavXcCFk4eo2uJ6\narfv61CnTscBDHt9PofXLya0VBka9VaEl47x5mkIIYRwQ9+RnVm98C/2bDoIQOlypbjr2ZsK3G79\nFjWp3bgaR+068leuGcNLXz7A2C4vkpqcBkBAQAAPvXUbx/6NY8ZbP9rqxlQpyyszHuSu61/gzIlz\ntvJR42+g982d2P3XAc6dvmA71vD7+xNeKozpry/AbDYTEBDAHU8P48bR3dm8ahcHdx0HoFyl0ox+\nfEiBz8+fAsxms79jKAhzXFyczw8aExNDQoLnIxx9TeL0vuISa0mOs2rVqgABhRKQ73l0DSsun2t+\nyfkVHrPZzM71/3L5YjLtejQlPNJ7neVXL/yLVfM2MGBkD7r/x/JUJTMzk4VTV3HpfBIjHuhP6XJR\nAJw4dIpfZq2jbpPq9L+li62NlT9s4MDOYwy6o4ftrl5aimUUaFhEKK27NiYw0PI0Ju5IPPt3HqVh\ny9pUrVMRsIzg3P7HPlKT02jXoxmh4SFeOz/w3mfn7vVLkrN8KC4XEInT+4pLrCU5TknOiv7nml9y\nfsVbST4/Xydn8lhTCCEApdR0YDAQr7V26kyjlLoNeMa6mQQ8oLXeYd13FLgMGIFMrXV7nwQthCiR\nZECAEEJYzABy64B5BOihtW4JTASmZtvfS2vdWhIzIURByZ0zLzp3dC//LJ+DMTODRr1GUKXJdX6J\n4/S+Lexb/QORUVHU6XYzMbWb+iUOIYoTrfU6pVTtXPavt9vcCFQv9KCEENckSc685NzRvfz4wnCM\nGZbRKQfWLmDgc9Oo0bqHT+OI3fE7S98Yi9lsWdZi569zGPbaPJn8VQjvuhtYardtBpYrpczAF1rr\n7HfVbJRS44BxAFprYmLcH8VsMBg8ql/cyPkVbyX5/Hx9bpKceck/y+fYEjMAs9nE7qUzfZ6c7V46\n05aYARgz0vln+Ry63/eGT+MQoqRSSvXCkpzZTxjYRWsdp5SqCKxQSu3TWrucodOauGUlb2ZPOhmX\n5A7XIOdX3JXk8/PygIA8SZ8zLzFmpjuXZTiXFXocLo7pjziEKImUUi2BacAwrbVtYiatdZz173hg\nIdDBPxEKIUoCSc68pFGvkQ4z4gM07q18HkfjPo7HDAgIpFHv4ru+mBBFhVKqJrAAuF1rvd+uPFIp\nFZX1GugP7PZPlEKIkkAea3pJlSbXMfC5aexeOhNjRjqNeyvqdx3q8zjqXT8Ys9nMvlXfExYRScM+\nt1K1aUefxyFEcaOU+g7oCcQopWKBCUAwgNb6c+BloDzwqVIKrk6ZUQlYaC0zAN9qrX/1+QkIUcg2\nLNvOsrl/EhxiYNjY3jTv2IDkpFR++HQZe7ceomXHxgy5qwdRZSNdvt9oNLF45hr+WrmTStXLM/KB\nAbZJZF35Y8k2Vny/nrCIEIbd3Yem7et5FK8x08iir39j8+pdVK5ZAfXgQCrXLB594mQS2nwoLs/V\nJU7vKy6xluQ4ZRLaov+55pecX9H1++KtvH7fF7btIEMg7//4DDPe/pG/f7+6yHijNrX5cPHzLtuY\n9to85n223LZdJiaKL9e+SlQZ52Ru9YK/eOehr2zbwSEGJv/8HPWaO6/FmZNPX5rLoumrbdvlKpVm\n2rqJRJTyfHUEX09CK481hRBCCJGrX2avddg2ZpqY/8UKh8QM4N+/j3Jg1zHXbcxybONCwmX+XPq3\nW8fLSM9k2dw/3I7XmGlk2be/O5QlnrnIhmXb3W7DnyQ5E0IIIUSuAgJc3OzJ4f6Py7pAQKBzeQ5V\ncziehzfMXdQPdBFDUSTJmRBCCCFyNWRMT4dtQ3AQIx8YQPtejnNoNm1fj/rNa7pu485eDtvlKpWm\n641tc6jreLzgUAMDb+3qsq4rQYYgbhzd3aEspkpZOg9o7XYb/uSTAQFKqTBgHRBqPeY8rfWEbHXG\nAJOAk9aiKVrrab6Ir6Q5f/Ig2374mIioaFoMe4BSMY7zqphMJnb89AVn9m+jTseBNOo53KmN5PPx\nHPlrGcFhEdTpNJDgMNcdPAvCZMzk+NbVHLqSSLkG7ShbvYHXjyGEEKLgrh/YhomzH7IMCAgNZuiY\nXjRoWYsXp97P/C9WsG/bYVp2bMyNd+ScQN35zDAqVi/HppW7qFi9HMPv709kdITLuj2GXUdoeAgr\nflhPWHgow+7uTd2mni3Kce/LI6hauyKbV++iSu0KjLivP2ERoR614S9uDwhQSvUHWgOl7Mu11i+7\n8d4AIFJrnaSUCgb+AB7RWm+0qzMGaK+1Hu9++DIgILsjm1ewYtIDWCYsh4DAQIa9No+K9VvZ6nw3\nvieX40/Ytqu36s6NL3xt244/uJNfXh1NRuoVAKIr1WTY6/MIjy7vtTjNJhNLXh/DyV1/WuIMCKTH\n/96mYY+bvXaMwlCUP3t7JTlOGRBQ9D/X/JLzK95K8vn5ekCAW3fOlFJTAAX8BiTb7XIrs9Nam4Ek\n62aw9U+xHiZaVG2YMRH7H63ZZOKPryZw85s/AnDkr2UOiRlA7I51XEk8Q2S5SgBsm/exLTEDuHTm\nOHuXf0vbEQ95Lc4TO9bZEjOwrKiw6dt3adD9phz7KwiRF6VUaaARzl8iV7t+hxBCFD3uPta8FWit\ntT6RZ80cKKWCgK1AfeATrfVfLqoNV0p1B/YDj7k6XkHWpfOWorx+WPqVS05laZcSbfHuTcjhI0xO\nJKahpe9A6oV4p92ZSYlePefjqc5xJl+Ip1yZ0gQFh3jtON5WlD97e9dinNa7759g+SKY/UtkXa8c\nRAghfMDd5OwccKEgB9JaG4HWSqkyWCZsbK61tp9F+2fgO611mlLqfmAm0NtFO/lel85bivKt20oN\n23Jiu+MQ5Optetrirdl5CMx802F/YHAIkdWb2OpUa92d+MOOE5xXat7Vq+dctn47AoOCMRkzbGU1\nWnXj/EXnpK0oKcqfvb2SHGcua9O9DozQWi/NqYIQQhQHOSZnSin7b5rvAXOUUm8CZ+zraa0Pe3JA\nrfUFpdQaYCB2S5zYr1MHfAm87Um7wqLfk5+y6OVRJBzeDQEBVG3aiW73vGrbH1muEtePncBf37yN\nMT2VkIgo+jz6sUMbbYePJy3pIvvXLiA4LIJWw+6jVvs+Xo0zqkI1+j4xhb9mv8Xl+BNUb92D7ve9\n7tVjiGuOAVieZy0hhCjicrtzdhDL4wD7DkCDs9UxA0F5HUQpVQHIsCZm4UBfsiVfSqkqWutT1s2h\nwF6ExwwhYdz81k9Aznclmg+8g+YD78ixjaDgULre8ypd7ZK6wlC7fV9qt+9bbO7yiCLvbeBFpdRE\nrbXJ38EIIUR+5Zicaa29OQdaFWCmtd9ZoKV5vVgp9SqwRWu9CHhYKTUUyAQSgTFePL4QogRSSp3g\n6giYAKAy8LRSyv5OPFpr1xMvCSFEEeTuaM2PtNYPuyifrLV+NK/3a613Am1clL9s9/o54Dl34hFC\nCKvR/g7IBMWbAAAgAElEQVRACCG8zd0BAWMAp+QMuB3IMzkTQojCoLW2jX5RSo3UWv+QvY5SaoRv\noxLC0aljZ9mz6SBtrm9O+WpR/g7HLfu2HSb28Blad2lMTJWyAKSmpLF51W5CQoNp17MphmCfzGN/\nTcr1J6uUGptVz+51lrqAdBTKJvH4vxgz04mp0zzf83UdXL8YgPrXZ+/i57796xaSEFOJmKbXu9yf\ncjGBC3FHKF+7CSHhpZz2m81mzh7aRXBYBGWr189XDJmZ6RxYu5BS5atSo3W3fLVRVKSlpHNg1zGa\ntgogsHhMMH0t+gpwSs6wjO6e5+NYhABgyTfrmPLcHEwmy9P3m+7pw33/N8rPUeVu0sPTWTXfMke8\nITiIpz+6m/otavLk8EkknrkIQM2GVXh3/lNEl3P+/SEKLq+093br3yF2r8HSx+MMcGdhBFUcZaQm\ns3zS/baJVcvXacaNz08nvLT7czhdPnuSeU/cYJsA9vfPn2fEe0uJqlDN7TbOnzzIgmeGYUxPBSAk\nMho1eQURdnHs+uVr/przDqbMdILDS9Fr/LvUvq6fbX/SuVMsff0uzsceAKBm2970e2IKQcHuZyUn\nd61n6Rt3YTJmAhBZvgqjPlyJISTM7TaKil0b9zPxns+4dP4KQUGBjHxwIGOe+Y+/wxJWdiPLA5VS\ndXAcxFQXSPV9VEJY7jRNe22eLTEDWDhtFTfe3oMa9Sv7MbKc/bP5kC0xA8jMMPLF/2laXd/IlpgB\nHN9/ikUzfmP040P8EWaJl2typrXuBaCUek1r/aJvQiqe/ln+jcOM9+eO7GHb/Cl0GfuK222s/uhx\nh5n5M1KvsPrDRxn2mqubATm0MflRW2IGlklp13zyNDc+Px2wJF4bZ7+J2WS0HCMlid+nvkCNNj0I\nMlgmf93y/Qe2xAzg+LbV/PvbPJr2v83tOH6b8oQtMQO4Yj1u17v/z+02iooPn57NpfOWz8VoNDH3\noyV0G9SOes1r+DkyYWU/svxQtn2ngVd8HZAQAOfjL5F82fm7wcnDZ4pschZ7+LRT2bnTFzh+8JRz\n3UNnnMqEd+Q2z5n9aM2Xs23byJB1i7OHdrlVlpsLcdl/r8CFOI+mkePSmeNOZYnH/7W9PnfkH1ti\nliXl4jmSEuIoXbk2AGcP7XRqw9NzSbno/MT7zL/bPGqjKEhOSnV5Adq/86gkZ0VE1shypdRarXUP\nf8cjRJbKNWOoWrsicUevrroSGhZMs+vy11XEF1p1aUxgUCAm49Vf7Y3a1KZt92Yc3On4+6Vt9ya+\nDu+akdt0GZlAhht/BFCxgdNgVCo2aO1RG2WrN3Auq+FclpvoKrWdymLqNL36um5zAoIcc/LwMhWI\nirn66NQb5xJRpqJTWZUm13nURlEQUSqMWo2cZ6Rv3KaOH6IRuZHETBQ1AQEBPP/FONs1pFKNGJ77\nbBxRZSP9HFnOKlUvz5OT76JshWgAGrSqxVMf3s0tD91Ar5s6EBgUSEhYMDfd04e+Izv7OdqSK7fH\nmva/fQYBI4A3gWNALeAZYH7hhVa8NO1/G6f++YtjW1YCUKlRW9oOH+9RG30f+4gfHh9AWpLluX5o\nZGn6PPKhh218zIJnhpCRYnkMFxZdnp4PTrLtjyxXiS5jJ7Bx1htkpqUQGlWWnv97m0BDsK3Odbc8\nzrmj/1hWGQDqXj+IRj2HexRHn0c/YvHE0Zgy0gGIrlybTrc/71EbRcVj797BxHs/59zpCwSHGPjv\no4Oo06S6v8MSgFLqd67Oc5YjrXV3H4QjhJP6zWvyxepXuJSYRO36NUlMTPR3SHnqfXNHegxtT/Ll\nVIdE8pkp9/Dw26MJDAwkNLzoroFcEgSYzXle11BKHQTaa60v2JWVxTKBbL1CjC8v5ri4OJ8fNLcZ\n7S+dOY4xIz3fIxwBYnf8jtlMgUY4Ht/2G+ViKlKqZjOX+9OuXOLSmWOUrd4QQ4jrjv6JJ/YTHBpB\nVMX8JSImk4ljm5cTUbYSlRo6343LUhxWCMjMyOTIvpM0adGATNL9HU6eisPPFAq0tmYAgFLKflBS\nPWAslnV5jwE1sQxamq61nuCNeAuBR9ew4vK55pecX/FWks/PW+dmf/3KjbuTlJQGInBc/DzCWi7s\nRFcq+ETk1VsVfNqJmm175fqPKTQymgp1W+TaRrkaDQsUQ2BgIHU6DixQG0WFIdhAgxa1KBMTXWIv\nPsWR1npm1mul1EZggNZ6j13Zt8B0oKgmZ0II4cTd5GwmsFIpNRk4AdTAMintzFzfJYQQvtME59Ga\nR4DGfohFCCHyzd3k7Gksw9VHAVWBU8AU4MtCiksIITy1FpihlHoJiMXyJfIV4Hd/BiWEEJ5yKzmz\nTpfxufWPKAZMxkxMRmOudYwZaR5NLCsKn9FowmwyybIo+TMG+BTYAwRhGXG+ALjLjzEJIYTHcpvn\n7Hat9Wzr6+xLN9loracXRmAif4yZ6ayf/ir7184nyBBC0wGjue7WJx2Wkord+Sd/fjWBi6eOUKF+\nK3o88FaB+5eJgpv93iIWTl1JRnomvW7qwPg3biMkLDjvNwoAtNaJwC3WORkrAGdlHkYhRHGU29fz\nW4HZ1te351DHjKWzrSgidi6axt6V3wFgzEhn+4+fU7pqHRr1tKz9nJ58mRXv/Y+MlCQAzh7cwYr3\nHkR9sDzfa4GKglv702bmvL/Ytr38+/WUr1yWO58e5seoij6lVG2t9VHr67rZdkcqpQDQWns2m7MQ\nQvhRjsmZ1vpGu9e9fBOOKKjjf69xKjuxba0tOTu9b4stMctyMe4wl88cJ7pyLV+EKFzY/Ntu57LV\nuyQ5y9suIMr62n4ZJ3tmLI8586SUmg4MBuK11s1d7A8APgRuBJKBMVrrbdZ9dwJZy9y9Zj+SVAhv\nMJlMBAbmNnd8/uqazeYCfznPaVoub7R9LXKrY4tS6mFgjdbaeV0fUaREV6rBmX+3OpZVvjq9R1RF\n5yWHDKERhJdxf4F24X1ValVwKqtcUz6TvGito+xeu/ebKHczsAx2mpXD/huABtY/HYHPgI5KqXJY\nputojyUZ3KqUWqS1Pu+FmMQ17ruPljDn/Z/JzDBSqnQEE75+kBYdXa8es2H5dt4ZP52UK6mEhAYz\n7pWRDL6jp8u6FxMv8+HT37Bx+Q5iKpdhzLM30fvmjh7FdvifWD56ejb7/j5Co9Z1eGDiKBq3rcv8\nz5ejP/mV5Cup9L65E/+beItMXOsBdy9m1wE/K6USlVI/KaUeV0q1y2m9TeE/bW5+kLDocrbtqIo1\naH7jGNt22er1adL3Vof3XHfL4wSHFd3lRK4Fg+/sQbW6lWzbUWUiue2xwX6MqPhRSrUsaBta63VA\nblO4DwNmaa3NWuuNQBmlVBVgALBCa51oTchWACVjkj/hV8cPnGLm2z+SmWEZ4JV0MZmXRn/ksq7J\nZOK1e78g5YplsfX0tAymPP8tFxMvu6z/8bNzWL/0b0xGE/EnE3n3kekc/df9SZGNRhOv3PUJ+/4+\nAsC/24/wyl2f8OfSv/ly4jwuJiaRkZbJsu/+4Jv3f/bktK957o7WvB0s/TuAHtY/L1t3lymUyES+\nlKlal1s+Ws3RzSsoXbYc5Rt1xBAa7lCn27jXaND9PyQe/5fKTa6TwQBFQOlyUXy24mU2Lt9Bako6\nnQe0IqqMJMweWqyUisQydcZa65+/tdZ5L4PivmpY5nrMEmsty6lciAJZPGuNU1lqchonDp2iRr0q\nDuVbftuNMTPbKH0z/PrtH4waf4NTO5tW7XLYNpnMbF69i9ou1hN25di+k8THnnMou5BwmZU/rHeq\n+9eKndz9gmfLAF7L3B6vr5RqhCUp6wl0AfZjufiJIiYkIoqGPW7OdYWAyo3bU7lxex9HJnITEhZM\n96HymeSX1rqmdVBAdyzXqvFAeaXUH1prb92GdNV5xlU/t6xyJ0qpccA4AK01MTHuP742GAwe1S9u\n5PycNW/XiEXTf3MsDIBGzeoTUcrxi3ebTk7dJAFo17WFy+NWqVmRY/tPOpTVb1Lb7RiDmgZjCDaQ\nmZF5NbSAABq2qMuGZTsc6lavW6VYf7a+/rfpbp+zM8BlYB6Wvhj3aa1d3ycVQgg/0VofVkoZgBDr\nn4FARS8eImty2yzVgThrec9s5WtyiHEqMNW6afZkObCSvHYhyPm50v0/bfliYhnOnb66emKPIdeR\nnHqF5NQrDnWDIwNp3bUx2//YZyur0aAK9VtXd3ncO58Zyuv3fYEx0zLjTLMO9WnRpZ77MQbAyP8N\n4LsPf7EVDR3bi8FjurNq4XpiD50BIDwylFEPDSjWn62X19bMk7t3zn4GugL/AcoC5ZRS67TWsfkL\nTwghvEspNRfLXf2TWBKjOcD9Xv4iuQgYbz1WR+Ci1vqUUmoZ8IZSqqy1Xn/gOS8eV1zDZm9+i++n\n/Mr+7UfpM7wjXQe1y7HuW98/znK9ng2/bqdF54bcfG/fHOteP7AN09ZNZNOqXcRUKUunfi0JMrg1\nsNnmzqeH0aFPC/ZtO0y7ri2o2cTSd/aTZS/x59K/Sb6cwvU3tKFcRVmK2xMBOQ1/dUUpVYmrjwxG\nAwla6/qFFJs7zHFx7nde9Jbi8u1O4vS+4hJrSY7T+s3T6TGiUuogli+cy7AkZ2u11h5dIJRS32G5\nAxYDnMEyAjMYQGv9uXUqjSlY7sglA3dprbdY3zsWeN7a1Ota66/dOKRH17Di8rnml5xf8VaSz8/L\nd87ynFvE7eRMKdUGS1LWC+gGpGC5+P03/2EWmNeSs+N/r2Hnz9PISLlCgx430XzgHTnWzelDOrJp\nGbt/mYExM53GvRWN+4xy2J94Yj8r3x/P5fgTRJarTO9HJlOxfiuvxG9v3+of2Lfqe0LDI2jc7zbq\ndBzg9WN4k7//Q+/+6wBzP17ChYTLdBvcjhEPDCAoyPVAZH/GeikxiVmTfmL35oPUa1qDO54eRqXq\n5V3W9ffPNC8nD59h1ruLOHkonmYd63HHk0OJjI5w6725XdyUUpWxXKe6Y7nbHw6s01rf453IvU6S\nMztyfsVbST4/Xydn7vY5Ow9cBNZhua3/hNb6YEECLEriD+5k2dvjMJsso1zOHtoJZjPNb7jT7TZO\n7l7PivceBGuyG39gO4FBBhr2vDo65ccXhpOZmgzApTPHWfTyKMbO2k2gwXvrKO5ft5B1nz9r2z6x\naz03vjCT6i27eO0YJcnJw2d47tYPyEizdGg9uOs4qcnpRXLy14n3fsaujQcAOLr3JHu3HubLda/m\nmEgWVempGTwz8j0SrH1oDu4+xqmjZ3l11kMFbltrfVop9S9QFUu/r15Y5iYTQohiw92rehutdW2t\n9R1a669KUmIGcGDdQltiluXfNfM9amP/mgW2xMzWxtqrbRzf9pstMctiysxwqOMN+7PHbTazf+0C\nrx6jJFnz02ZbYpZlhXYeBu5vp48n2BKzLHFH49mz6UAO7yi6/v59ry0xy7Jp1S4unCtY1zCl1CKl\nVCLwE9AGS1/ZdlprmdJCCFGsuDvP2dFCjsOvgsOcH6e4Ksu9Dec5qYJDr7YRWsr1dHBhOZTnlyG0\n4OdyLQmLCHUqC490LvO3kLBgAgMDMJkcvwCER4b5KaL8C3Px8zUEBxEc7FlHZBcWAI9orY8UtCEh\nhPCn4vU8pJA07nsLIZHRtu2AgEBaDr7bozaaDrjNITEKCDLQYvBY23alhm0oFeM4hDYsqqzX+4O1\nHDyWgKCrObchNJxmA0Z79RglSZ8RnShbMdqhbMQD/f0UTc7KVSxN7+GdHMpaXd+IBi2L33qoLTo1\noFGb2g5lN47u7nafs5xorWdIYiaEKAk8Gq1ZBHltQMCl08fYu3Iu6SlJNOg2LNcJWnPqGHjh5CH2\nrvoeY0Y6DXvcTMX6jqvJZKYms+7LF4k/sIPytZvQbdwbhJWKdmqnoM4e2sm/axZQKiqaWtcPpWx1\nfw6ozZu/O5EmnDrPL7PXcSHhEt0Gt6Nt96Y51vVnrMZMIyvnbWDPpoPUbVqDgbd1JSzc9V0+f/9M\n85KclMrSb9Zx+ngijdrUovfwjm4v0uxuh9piQgYE2JHzK95K8vkV2dGaRZRMpZELidP7ikusJTlO\nSc6K/ueaX3J+xVtJPr8iM1pTKdXbnQNprVe7H5YQQgghhMhNbgMCvnLj/WagrpdiEUIIjyil3HoW\nqrU2FXYsQgjhLTkmZ1rrOr4MRAgh8iGTHBYYtwqw7i/wUFAhhPAV781+KrgQd4R9q+ZaBgT0vJkK\ndVt43Ebi8X/Zt/oHABr3Hkm5mo0c9qdcPMfSN8dy8dRRylSrz6DnpxNSStYsE96zbtFm5k75lcDA\nAG57fDCd+7f2uI1/tx9l1bwNhIQFc+Nt3alax5trjzuQL5FCiBLH3RUCooFXsCyLEoNdZzatdc1C\niayYOR97gB+fH05G6hUA/lnxLYNemEHV5p3dbuPsoZ0senkUxox0APaumMOQ/5vrsMTTnAe6YMrM\nsNQ/uJ1v7u/C2G92e/FMxLXsl9lr+fjZObbt/7vrU5799F56DrvO7Ta2rfuHF0d/hMloeZK4ZPY6\nPlryAtXrVfJ6vFrrY15vVAgh/MzdO2efYlkK5VXgGyyLnj8FeHd6+2Jsz7I5tsQMwGzMZOfi6R4l\nZ7uWzLQlZgDGjHR2L5lB74c/sBzj11m2xCxLZnoKhzf+St1OAwt4BkLAdx8ucSqbNeknj5Kz+V+s\nsCVmYJk245dZa7jv/0bl8i7vUEoNxfWXyJwXyxVCiCLG3Ulo+wPDtdY/AUbr36OA2wstsmImIyXJ\nucwuWXNHpov6GXZLPiVfOOfyfSkX4j06jhA5yUjPcCpLT3Uuy01KUqpTWfKVtHzH5C6l1ATgCyzX\ntZHAOWAAcCG39wkhRFHjbnIWiGXhc4AkpVQZ4BRQtGc39aGGPW6CgIBsZTd71EaDHje5aPdqG21v\nftD5TQEBNBsoNwWEd/RwcYdswC1dPGqj70jHu8UBAQH0Gd6xQHG5aSzQT2v9GJBu/XsIUNsXBxdC\nCG9x97HmDiyPClYBvwOfAEnA/kKKq9ip1qILfR+bwu4lX2PMSKdxH0WjXiM8aqNOhwH0Gv8e/yz/\nBrPZsiSU/fJOQSEh9H/yc1ZPeZzM1BSCwyPp/+Rn3j4VcQ3738RbSUtOZ+2iLQQEBNBXdeb2J4d6\n1MaNo7tjMppY9v2fhIWHcNO9fWnZuVHebyy4MlrrrA6Y6UqpYK31JqVUD18cXAghvMXd5Oxervbf\neBh4CygDyC0bO3U7DSxw368G3f9Dg+7/yXF/7Q79GDtrV4GOIURuHnvvTh57784CtTH4zp4MvrOn\ndwJy3yGlVDOt9R5gN/CAUuo8cN7XgQghREG4lZxprQ/bvT4LeLYquBBCFL4XgfLW188C3wKlABf9\nAYQQouhye54zpdRY4FagKhAHzAWma62L9eKcQoiSQWu9xO71JqRPrBCimHJrQIBS6h3gGWABlik0\nFgBPAm8XXmhCCOE+pVRiDuUynFkIUay4e+dsDNBWax2bVaCUWgxsA57O681KqTBgHRBqPeY8rfWE\nbHVCgVlAOyxD4EdprY+6GV+eLp4+StzuDZSuWpeqTZ1Hjhkz0zm+9TcyUpKo1b4voX6adT/5YgLb\n5k0BoO2I8USUjnGqc/bwLs4e2kWlhm0pX6ux0/705Msc27KK+HLlKNewA4aQsEKP25UL5y6zaeVO\nospG0qF3C4IMnq+gc/ifEyyYupLKNWNQ428gJMTxn6zJZGLbur2cjUvkul7NialS1uNjGI0mtqze\nzYVzl+jQpyVlK0R73EZmRiabVu0i6WIKnfq1JLpcKY/b8JVDu0+w7+/DNGpTh/rNneeQTrmSysbl\nOwgMDKRj/5aEhYf6Icp8Cc5eoJQKRpZuEkIUM+4mZ5etf7KXXXLz/WlAb611kvVi+YdSaqnWeqNd\nnbuB81rr+kqpW7DclfPKrJX718xn7WfPYjZbJsas12UIfR6ZfDW4K5dY9LLi/IkDAIRERjN4whxi\najf1xuHddmb/3yx6WWE2WeLcu2IOQ16ZS+XG7Wx1/przDjt++sK23X7UY7QdPt62fSHuCD9PGEXK\nRcucaFGVajJs4g9ElHFO8grT3q2HeeG/k0m2znnVoGUtJs1/krAI93/R//DpMr56/eo8xwu+WMHs\nzW8RGR0BgDHTyAu3fcj2P/YBEBxq4KUvH6BDH/eXzUpPzeAZ9R57t1q6VYaGhzBx9kMejS5MTkrl\nqZsncWjPCQAiosJ4c+7jNGpd2+02fGX2u4uY88Fi2/atjwzizqeH2bZPHTvLEze9Q+IZy8w5FauX\n5/0fn85X0usrSqnfsayfGaaUWpdtd3Vgve+jEkKI/HN3nrPJwAKlVD+lVBOlVH/gB+ADpVTdrD85\nvVlrbdZaZ83SGmz9k72v2jBgpvX1PKCPUiqAAjIZM9n4zVu2xAzg0J8/c2b/Ntv23pXf2RIzgPQr\nl9jy/WR87fepL9gSMwCzycTvX75o205KiGPnoi8d3rNt/iekXrr6NOfvBZ/YEjOAy2eOs3vJ14UY\ntWsz3/7RlpgBHNh5jBV6g0dtfPP+zw7byUmpfPXGAtv2hmXbbYkZQEZaJtNem+fRMdb8tMmWmAGk\npaQz/Y2FHrWxfO6ftsQMIPlyKrMm/eRRG76QGH+RuR87rgCgP1nKuTMX7LZ/tSVmAPGx55j/xQqf\nxZhP04DpWBZB/8ruzzTgAcCzCQeFEMLP3L1z9qH1717ZyvsAH1lfm8nl8YFSKgjYiqWT7ida67+y\nVakGnADQWmcqpS5iGXmVkK2dccA4az1iYnK/I5RyKdEheclivnLe9t70i85dUpITTubYtsFgyPO4\n+ZF6McFlWdaxkuP2OySZAKbMdAzGFFudlMRTzm2cP10o8ebm9Annc7kQf9llHDn9PNNS053Kzhw7\nZ6t78Wyy0/7TxxI8OtcL8c6rMpw5kXMbrmI9fyb7TWWIP5Ho85+5PVdxnj5yHmOm478fY6aJ9CQj\nMc0sdRNOOk+mf+7UxUI7F2/8X9JazwRQSm3UWu/Lq74QQhR17k6l4e4dttzaMAKtrasLLFRKNbeb\nMBLs1sGz4zQSVGs9FZiatT8hwTkJyK5C/VacPbjDth1oCCG6dguy3luhcQdYPMPhPVVbdCGntmNi\nYnLcVxCVGrXnyKZljmWN29uOFRJTi7CocqRevppsRpavTGB0JVudys06E7t7o2MbTTsXSry5adu9\nKUu+cXzC1KxTPZdx5PTzrFC1HGdPOibW3Ya2s9Vtcl1tAgICMJuv/jNp36uZR+fatGMdp7J2PXJu\nw1WszTrVs6w+a6dN98Y+/5nbcxVn+WpRlK0Yzfn4q70RylaIJqZGaVvdll0bsnmN4zx6rbo0LLRz\nyc//papVq+a061+l1L1YRpXHaK1bKqW6A5W11rpgkQohhO94lHQppWoopToV5IBa6wvAGiD7bK2x\nQA3rcQxAacDl6CtP9X74fSo1svTbKhVTlT6PTiaibEXb/jodBtBOPUpweCkCggzU7zqM9qMe88ah\nPdLr0cmUq3m1g3+5mo3o/eiHtm1DSCj9nvyUMtXq2/b3e+IzAoOu5titho2jcZ9RBBpCCA6LpOXQ\ne2nYc7jvTsLq7heH03VQWwKDAilVJoK7XxxO2+6e9eF747tHKBMTBVhWxuo+pD0Db+1q21+3WQ0e\nfmc0ZWKiCAgIoF3PZox/8zaPjtG8QwPuf3UU0WUjCQwMoPOAVtz3ivKojQ59WjDm2ZuIjA4nMCiQ\nHkPbM+ZZ56W4/C04xMDL0/5HrUaW5KZWo6q89OUDBNsNsrjpnj4MvqMHwaEGQsOCuenevtwwupu/\nQvbUq1j6rk4FskY6xGIZaS6EEMVGgP1dh5wopWoC3wGtAbPWupRSagQwUGt9jxvvrwBkaK0vKKXC\ngeXA21rrxXZ1HgRaaK3vtw4IuFlrnddvSXNcXFye8WfJTEshKCSMgADXXdlMxkzMJiNBwbl3Wi+s\nO2dZMq2LnRvCInKuk5aCITQ8x/3GzHRiYipw/sLFHOv4QnpqBkHBQQQF5fw9IK+fZ9LFZMIiQzAY\nXN/oNZlMZKRlEhoeku84jUYTxgwjIWFOA/7cjtVoNGHMNBISmnsbvpDXzzQ1JS3XUZgZ6ZkEBIAh\n2O2pEPOlAHfOnP4TK6VOAG201glKqfNa67LWfquJWuuiOqLBo2tYYV97/E3Or3gryefnrXPL6fqV\nnbtX3i+AX4BuWKa5AFgBvOfm+6sAM639zgIBrbVerJR6FdiitV6EpQPvbKXUQSx3zG5xs2235ZbM\nAJY7UEGF+8vIHbklZbY6eZxLkCGEIIP/k4S8kh13lCqd+88jMDCwQIkZQFBQYK4JpK/a8JW8pscI\nDvH//4N8CMKy5i9c7RJRyq5MCCGKBXevwB2AQVprk1LKDKC1vqiUcmsyMK31TqCNi/KX7V6nAiPd\njEcIIbJbAryvlHoMwHrXbCLwc67vsqOUGohlAFQQME1r/Va2/R9wdWBUBFBRa13Gus8IZHXYO661\n9mzFeCGEsHI3OTuDZZTl/qwCpVRT4HhhBCWEEPnwOJaJrC9ima4nCUsXijvcebP1zv4nQD8sfdU2\nK6UWaa3/yaqjtX7Mrv5DOH7pTNFaty7oSQghhLvPYN4FFiul7gIMSqlbge8pYcs3JSXEcT72oL/D\nEHbMZjNH9saSGJ9z37kLCZc4/E8sJpMpxzoFZcw0cmj3CS4mOk+bkeVs3HmO7c+5/1BGeiaHdp8g\n6aLzFCDuSk/N4ODu4w5zyHkqNSWNg7uPk5qclu82iiKt9SWt9X+wDAboBNTTWt+ktc75Q3PUATio\ntT6stU7Hsn7wsFzq34qlL64QQniVu1NpTLeuWzcOy1xkdwIvaa1/LMzgfMVkzGTNJ09x8M+fwWym\nQr0WDHjmSyLKVPB3aNe0k4fPMGHMFGIPnSEwKJChY3px/6uOi0Z89fp8FkxdgTHTRJXaFXjl6wep\n1S303PsAACAASURBVDDHqRby5d+/jzDxns9IOH2BkNBgbnt8MKPG32DbbzSa+OCJmayatxGz2Uy9\nZjX4v5njHWbV37nhX964fyoXEi4TGhbM2BeGM2xsb4/i2Lx6F+88NJ3LF64QHhnKAxNvof+oLh61\n8fvirUx+ahZXLqUQGR3OI2/fTveh7T1qo6hRSkUALwLNsSwp96bWenM+mrLNtWgVCziv9WY5Zi2g\nDrDarjhMKbUFy2S4b5WU66MQwvfc7vVrvdCUyIvN/rULOfjHItv22UO72PTtu/T8X4m6MVjsfPrS\nXGIPnQHAZDTx41eraN+rGe17NQcsCc8Pn16dF+7U0bNMeW4Ok+Y/5dU4PnhyJgmnLZOzpqdl8PWb\nC+nYtyW1G1cDYO1Pm1n5w9XVDw7tOcFXbyzgmY/vtsRuMvHuozO4kGC5gZOWmsEXE76nY7+WVK7h\n3gSsGemZvPvoDC5fsEyam3IljY+fnUOHvi0pUz7KrTZSrqTywRMzbXfdrlxK4YMnZ9K+d3MiSvln\n/VUvmQJcBywFRmCZvPqhfLTj1lyLVrdgWSPYaFdWU2sdZ10tZbVSapfW+lD2N3o6kba9wpoAu6iQ\n8yveSvL5+frcck3OlFLtgLSsyWKtU2JMxvINdQPwpN2yTMVWvN1STrayA9v9EImwt3er0+819m47\nbEvO7JddyrJv2xGvxpCclMrRfc6PKvduO2xLzlzFuc+uLPHMReJjzznsN5nM7P/7qNvJWdzReC6e\nc3w6l5GeycFdx2nfs5lbbRzdF+f0ODTlShpH952kaft6brVRRN0AtNVan1JKfQysI3/JmW2uRavq\nQE7PqW8BHrQv0FrHWf8+rJRag6U/mtM/jvxMpJ2lJE9VAHJ+xV1JPj8vT6WRp7z6nE0GKtttTwMa\nYrmwNAfeyU9wRU1MXeeFsmPquPcLTxSeBi1qOZXVb1Hz6v6WzvvrNa/pVFYQEaXCqFa3knNsdsd2\nFUd9u9jLVixNTOUyDvsDAgIcziUvlWvEUKqM45QiQYZA6jSp5nYbNRtUdppyJDQsmJoNqrjdRhEV\nqbU+BaC1PoFlAuv82Aw0UErVUUqFYEnAFmWvpJRqBJTF8gU1q6ysUirU+joG6AL8k/29QgjhjryS\nsybA7wDWZZduAG7TWn+CpTPskMINzzca9RpOzbZX+/+UqVaPDv990o8RCYD7Xx3l0G+rn7qejn1b\n2rbbdGvCjaO72yYVLlsxmgffuNXrcTzyzmiiykQCljnV1PiB1LdLAnvf3JHrb7g6aK9q7YqMff7q\nWttBQYE8Mul2IqIsjw6DDIHc+fQwqta5ukrF/7d33+FRlNsDx78hnZAQIKGEEjoIUkWKqKCAggXE\nq69YELArXgvqtf5UsOvVK9eGiHj1XlAOKgIqCkhXioAUqQqKhFBCTyjpvz9mEzbZDdmEze7s5nye\nh4fMO+/MnpnA7JmZt5QmMjqC+18ZSlRVa3yy8Igwbn/6WmrViS9ly1Ni4qoy8oUbCseei4gK554X\nri91HLkAEGaMucgYc7Ex5uLiy46yUolIDnAv8D2wySqSDcaYMcYY52Exrgc+ExHnV55nASuNMWuB\n+VhtzjQ5U0qVy2lnCDDGHAZqiEi+Y/yf8SLSyGl9uoh41uClYpRpdO3SHNy5lewTx6jdvAMhVco/\nor1dBEOcOdk5bP7lD2omVi8xmdm9I40Dew7TqlOTChs8NfNEFlvX/slZHVoSVsL4v3/9tpuMI8dp\n1amJ28FoTxw7yW/rdlC/aZ0yJVXOjh09zu+/7iS5ZT3iE+JKrHe6c5p+6BjbN6XQpHV94mpWK1cc\n3uKNGQKMMX9SctswsGY1aVqe+HxAZwhwoscX2IL5+Ow2Q8AGrIFhBesR/9yCFcaY+ljjCQWNmg1b\n+jsEVUxYeBhnd21x2jr1khOpl1yxPWsjoyNo173laf+DlvZ6MDomivY9Wp1RHDFxVelw3pntI7ZG\nzBnvw05EpLG/Y1BKKW8qLTl7FJhpjBkH5ALnO627DvixogJTSimllKqMTtvmTESWYA3o2A9oKiJb\nnFZ/AzzodkOllFJKKVUupTbQcYyuvcpN+RY31ZVSSiml1BmomNbTSvnIuGemMPM/88nNySMxqQav\nTH2IpMae94L0lhfvGs/ib1aRn5dPw+Z1ef2rfxBXw/eN7Sf962umf/gDeXn5DLjxAkY8Ppgqp+nc\nUh6bV2/nnac+ZfuGnbQ5tzn3vXwjDZsH/HAcSillG969aivlQ8vnruOrCT+Qm2PNqZmWeohHzRs+\nj2Pqu9+zaOZK8vOsDoM7f9/DkzeO9Xkcc+Qn/vvPGRw9dIyMI8eZ+u73zPhovlc/I/NEFs8Me5vf\n1u4gNyeP9Uu3MvqWdzldr2+llFJlo8mZClhff7LApSxt10GfxzF/2nKXsu0bUnwex9LZa13Kln3v\nWnYmNq7cxpGDRScFSdm2l5Rte7z6OUopVZlpcqYClrvhM8LCQ30eR0JSDZey6JhIn8eR6CYOd7Gd\n2WfUdCkLjwgjvlbJY64ppZQqG03OVMAa/uhgooolQYNu8WgweK+6e8wQl6Tw5kcG+TyOq+/oR43a\np5Kk2PgYzMj+Xv2MBs3qcOn15xcpMyP7E1sjxqufo5RSlZl2CFABq2q1KCavfo1PXpvO7h37uXJ4\nb48nAfemesmJ/G/lK3z8ynSOHMzAjLyU1p19PyB9nQa1GD9/NEu+WU10VDQde7civpb3J/B44LWh\n9BrYhW0bdtK2S3PanBvQk6YrpZTtaHKmAlrValHcNfo6f4dBfEIc97821N9hEBsfw4AbL6jQaVRC\nQkLofGEbOl/YpkL2r5RSlZ2+1lRKKaWUshFNzpRSSimlbERfayqllCpV1okMti78kmP7d5PcpQ91\nW3fxd0hKBS1NzpRbc6cuZe7UpUTFRHL1HX1p36OVz2PIy8tjxkfzWfLNamrWro65tz/Nz25Upn1k\nncziudvHsWHF78TGx3Dn6Os4r3/Hsu0jM5up737PqoUbaNq6EVff2YekJr6fhUApf8nJOsn0p67h\n0M7fAFg7YzwX3vkirfv4v72nUsFIkzPlYtbkxYx95L+Fyz/PW8+bXz9Oi3bJPo1j0htfM+lfXxeJ\nY/z80STWdx1rqyQPDnqFbb/uBOB4xknG3PYuHywcTcNmnk839PYTk5n92Y8AbPx5Gz9+v4qJS54n\nOibK430oFci2L5tVmJgVWPX5W5qcKVVBtM2ZcvHd5MVFlnNz8pgjS30ex6xicZw4lsmCGT+XaR8F\niVmhfJj8r2883j4rM5t5XywrUnZo31GWzVlXpjiUCmSZ6Yddyk6mH/JDJEpVDpqcKRdh4a4PVMP9\nMPK++zjK+LA3xLUoPNLzfYSEhBAa5nrs/jgfSvlL43P7ERoeUaSs2XlX+CkapYKfJmfKxVW39imy\nHFU1kv43XODzOAbfVjSO6rVi6T24a5n20aFYW7kqVUIY+rDno/eHR4Rxxc29ipQlNa5N1z7tyxSH\nUoEstnYD+j82gTqtOhNTqy5tLh1Kz1ue8XdYSgUtbXOmXFxwxTm8+OkDzJ26lOiYKK4ccRENm9f1\neRyDb+9LQr0aLPl2NTUT4xh0W58yj3j/ytSHeOvxSayYu44atatz74s3kFivbPNN3vrU32jUsh4r\n52+geZtkLr3xPCKiwsu0D6UCXf12Panfrqe/w1CqUgjJz8/3dwxnIj81NdXnH1qRo697k8bpfYES\nazDHmZSUBG5fWAekMl3DAuX3Wl56fIEtmI/PW8fm6fVLX2sqpZRSStmIJmdKKaWUUjaiyZlSSiml\nlI1ohwDlN8czTjJ36k8c3neMs3s0o/OFbcq8j4wjx5k95Uf27z5Mj0s70K57S5c6a3/awrLZa6nT\noBb9rjuPmNhob4SvlFJKVQhNzpRfZGfl8MjVr7Ftg2OQ2H/D7f93DX+76xKP93HyeCYPXPkSKdv2\nAvDl+Dnc/+pQBtx4atiPmf9ZwDtPTi5c/nbSIt769kkioyNc9qeUUkrZgb7WVH6xfO66U4mZw2dv\nzSIvL8/jfSyauaowMSvw6diio/9PHvt1keW/tu7mp+9+KWO0SimllO/okzPlF+mHj7mUHUs/QV5u\nHlWqeHbP4G4fxcsyjhz3aDulAIwx/YGxQCgwQUReLrZ+OPAasMtR9LaITHCsGwY85Sh/XkQ+9knQ\nNnB41zbCo6sRU7OOv0NRKijokzPlFz0u6UB0TGSRsgsu7+x2yqaS9Lysk8tgsL2vKjqDQO9BRZcj\no8LpcWmnMkarKgNjTCjwDjAAaANcb4xx1xByioh0dPwpSMxqAs8A3YCuwDPGmLKNdhyAjh3cy5eP\nDUIevITJd5/PwvceI78MT7+VUu5pcqb8Ij4hjhcmP0DHnq1JSq7NFcN6c/9rN5dpH3UbJvDcJ3+n\nXfcW1G2UwODb+3LX6OuK1Bn5wvUMuvVi6jZKoH2Pljw/6X4Sk4L+O1OVT1fgdxHZLiJZwGeAp3N9\nXQrMEZGDInIImAP0r6A4bWP5pFfZv/1XAPLz89gyfyrbfvq6lK2UUqXR15rKb9p0acbLMuqMRl7u\n0LM1HXq2LnF9VNVI7h4zhLvHDClvmKryqA84N4RMwXoSVtzfjDEXAluBB0VkZwnb1q+oQO1i79bV\nLmV7tqym+fkD/RCNUsFDkzOllLK4m1Kl+Px2M4FPRSTTGHMX8DFwsYfbAmCMuQO4A0BESEhI8DjA\nsLCwMtWvaEmtOrJl719Fypq071buGO12fN6mxxe4fH1smpwppZQlBWjotNwAKDLxpYgccFr8AHjF\nadvexbZd4O5DRGQ8MN6xmF+Wp8Z2m7uw0zUPkLplDemOBC25S1/qdupT7hjtdnzepscXuLw8t2ap\nNDlTSinLz0ALY0wTrN6YQ4AbnCsYY+qJyG7H4kBgk+Pn74EXnToBXAI8XvEh+1dc3WSuGzuXfVt/\nISImjpoNXQeBVkqVnU+SM2NMQ+AToC6QB4wXkbHF6vQGpgN/OIq+FJExvoivMvpjUwp/bt5Fm3Ob\nU6dBLb/FsXn1djIObaJZ+/rUSIxzWZ9++BirF26kZp3qbkf/Dya5uXn8smgjmSezOad3G6KiI0vf\nSHmNiOQYY+7FSrRCgYkissEYMwZYKSIzgPuMMQOBHOAgMNyx7UFjzHNYCR7AGBE56POD8IMqVUKp\n27qLv8NQKqj46slZDvCQiKw2xsQCq4wxc0RkY7F6i0XkCh/FVGlNeP5zPn9vNgBVqoTw95dvKjKq\nvq+8PHICC75aAUB4ZBhPjruT7pd0KFz/64rfeHroWxzPOAlA515tGPPxvWUabiNQZBw5zj+u+Sfb\nN6YAULNOdV6d+jANmum4Ub4kIt8C3xYre9rp58cp4YmYiEwEJlZogEqpSsEnQ2mIyG4RWe34OR3r\nVUDQ92Syo13b9/LFuDmFy3l5+Xzw3FROnsj0aRxrf9xcmJgBZGfmMO6ZKUXqTBjzeWFiBrB64UZ+\n/DY4R/f/+pOFhYkZwMG9R5j0r5l+jEgppZS/+PwRhDGmMdAJWO5mdQ9jzFqsRrgPi8gGN9uXu6eT\ntwRKjxR3cW5a/if5+UU7kR1PP0l+ZhUSGvrumA7tyXAp2/PXfuJiqxMRaQ0sm7J9r0ud/alH/Hru\nK+p3n5ZyyKUs9Y+0oO/1FihxKqWUL/k0OTPGVAO+AB4QkaPFVq8GkkUkwxhzGfAV0KL4Ps6kp5O3\nBEqPFHdxNmiZSGRUOJknswvL6jZKIDIu1KfH1KxDA0JCQookim27Nudo+hFIt5Y79Gzl8qSs1TnJ\nfj33FfW7P6tLE77534IiZWd3bxH0vd7KE6envZ2UUipQ+WyGAGNMOFZiNklEviy+XkSOikiG4+dv\ngXBjjN5Se1lsjRgee/d2atWNB6Bh87o8Me4Oj+ez9JaGzety36s3EVcjBoAWHZJ56I3hRerc8/z1\ntO9hdQKoWi2KW5+8mrO7uuTrQaHPNd0ZfFsfwiPDqFIlhPMv68xNo7T5pVJKVUa+6q0ZAnwIbBKR\nN0qoUxfYKyL5xpiuWInjAXd11ZnpcWlHuvZtT/qhDOITXHtI+sqAGy6g7zU9iAqPJjck22V9rTrx\nvPr5wxw9mEFU1UiXeTSDSUhICHeOvo5hj15Fbk4uMXFV/R2SUkopP/HVa82ewFBgvTFmjaPsCaAR\ngIiMA64B7jbG5AAngCEi4naEbXXmQkOr+DUxKxAeEUaNhOqnfbUVV7OaDyPyr6iqOnyGUkpVdj5J\nzkRkCe6nN3Gu8zbwti/iUUqpyuTYwT2snPImadvXU7tFR7qYB6ka777VSEZaKtOe/BsnjqQRGhZB\n15sepd2AYaRtW8fqL94h48Buks/pQ6er76ZKaDi/zvoPvy+eQURMHB0G3kGD9j1LjOOP5d/z66yP\nycvNpvXF19Hqomsq6pCVCmjBN2CUUkqpQvn5+Xz7wggO7dwKwMEdmznwx0YGvzTNbX0ZdQk5mScA\nyM3OZOlHY6jZqDWzX7md7JPHADjwxwYyMw5TLSGJ5f97uXDb1A3LGPzSNBIat3HZb8q6Jcx5/Z7C\n5b1bVlMlLJwWFwzy2rEqFSx82wpceUV2Vg67tu8lJzvH36GcsYP7jvDz/PXk5eX5OxSlglLatvWF\nidmpsnUcLFYGkHFwT2Fi5mzx+CcLE7MCWxd8wdaFXxQpy8/N4ffF093GsXWBSz8wti74vNT4laqM\n9MlZgPnpu18Y+4//ceRAOjVqx/HQv0bQpXdbf4dVLs+OeIdls9cCEBYeyhPj7uS8/h39HJVSwSU8\nKtp9eaRrp5PQCPdtHt3VDYuMJsxtufvOLGFu4iiprlKVnT45CyDH0k/w2n0TOXLAGgjs0L6jvHrv\nBLJOuvZ0tLsfZ/1SmJgB5GTn8urfJ/gxIqWCU40GLWjYqXeRsibdBxBbu4FL3ehqNYipWXzKsBD6\nPfIusYlF63cYeDvtr7gVQk41J46sFk/ri691G0fbS4cSGhF1aq+hYbS7fETZDkapSkKfnAWQ7Rt2\ncuJY0WmWjh46xo7fUmnRLtlPUZXPohkrXcpOHs/i2NHjOoyEUl7W76F32TxvCvu3rad2i060urjk\nhvg3jvuJWS+OYM+W1UTH1aLvqLeJS2zAVS9+wcbZk8nYn0ryuX1p3KUvANHxCfy+ZAaRVeM465Ib\nqJbgfpDgWsmtufrlr9g0dwp5Odm0uuhvJDZrXyHHq1Sg0+QsgDRsXpew8FBysnMLyyKjI0hKTvRj\nVOVzdrfmLJzxc5GysPBQTcyUqgBhEZGc3f9mj+sPeOIjl7Lo6gmcc+19LuVJbbqR1KabR/ut0aAF\n5w1/yuM4lKqs9LVmAIlPiOOWJ66mSqj1awsLD+XOZ01AJjRXDr+Ihi3qFSm7+RHttaWUUkrpk7MA\nc/Ud/bjg8nPYvjGF5u0bUatOvL9DKrcPFoxm+dx1pGzdx4WDzyGxXg1/h6SUUkr5nSZnASixfk0S\n69f0dxhe0a1vey4fEhiTdCullFK+oK81lVJKKaVsRJMzpZRSSikb0eRMKaWUUspGtM2ZhzL2p/Lj\nxNHs2fQztZu2pcsNj9hyjJ68vDwmv/kN301aTGRUJFfe0purbu3j77Dc+mXxJia+9CX7dh6gc++2\n3DNmCLE1Yvwdlt9888lCPn9/Nlkns+l3bQ+GPjKI0FC9f1JKqcpGkzMPzXl9JGnb1gGwc/1P7Hvx\nFm58dzFhke6nRvGXmf9ZwP9en1m4PO7pKSTUjef8y8/xY1SuDuw5zDPD3y6c3WD+l8vJPJ7J0x/e\nU8qWwWnFD+t56/FJhcufvTWLqrHRmJH9/RiVCibrvplI6vqfaNipN20vvQmAw6nbWfjeY+RknaTH\nsKdIatMVgIN/bSFl3RLi6ibTqPNFVKkSWuJ+Mw7s5s8Vs4mIiaNpt/62uyYqFYg0OfNAxv7UwsSs\nQGb6IVI3LKNR54v8FJV7S75Z5VK2+JvVtkvOVvyw3mXaqWWz15KdlUN4ROX7Z+nu97bk29WanCmv\n+Pzhyzn412YA/lo9n60Lp9FlyIPMen5YYZ2vn72erjc+SlRsPIvefwLy8wFo2KkX/R/7kBCnaZoK\n7Nm8km9fGF44Wfqaae8x6PnPiYyJ88FRKRW89J2JByKqxhIa7johcHR8gh+iOb34BNeLYs1E+10o\n4xNjXcrialYjLLzkO/RgViOxupsy+/3eVODZs3lVYWJWIO33Ncz/9yiXuivlTVZMfq0wMQPY+ctC\nUn/9ye2+V8qbhYkZwOFd29gyT7wUuVKVlyZnHoioGkv7K28rUtb43H4kNm3np4hKZu7tT3TMqUSy\neq1YBtmwzVnXi9vRpkuzImVDHxro9u68MrhiWG9q1jmVoEVGhXPdvQP8GJEKFgd2bHJbnnU83aUs\nLyeLk0cPupRn7N/tdh/HDriWZ+xPLWOESqniKt/7o3I6d8goktp2Y/fGFSS37UKts3r4OyS3WrRL\n5v35z7Lgq5+pHl+dbpe2dfs0zd9Cw0J5ecooFs1cyZH9x2jbrSmtOzf1d1h+k5hUg/fmPs38aSs4\neTyL3oPOpW4j+z2ZVYGnRa+r+GniaPLz8wrLQqqEknR2d1LWLCpSN652I6olJpH669LCstDwCBp2\nvNDtvpPP6cO6rz8sWtbFfjeDSgUaTc7KoH67ntRv15OEBHuPaF+7fi3MyP62jzMiKpy+1/awfZy+\nUr1mrG171qrAFRFVjV73vMKSCU+Tk3mC8KgYet39Ck17DOCz+/pwdM+fAETF1uDql6aRnXWSxeOf\nZOeaRVSv15juQx+nao3abvfdZcgoso6n89uSGUTGxNFx8N3Ub9fTh0enVHDS5EwppYJcy15X07LX\n1S7lQ/79g0tZBNXp/9gEj/YbFhHFhXe9xIV3vXTGMSqlTtHkTCmlHIwx/YGxQCgwQUReLrZ+FHAb\nkAOkAbeIyA7HulxgvaPqXyIy0GeBK6WCiiZnSikFGGNCgXeAfkAK8LMxZoaIbHSq9gvQRUSOG2Pu\nBl4FrnOsOyEiHX0atFIqKGlyplQpcnNymT5xHqsWbqRp60YMvKUXifVrlmkfWZnZfDXhB9b8uJnk\nFvW4dmR/atZ2HT5D+VVX4HcR2Q5gjPkMGAQUJmciMt+p/jLgJp9GqJSqFDQ5U6oU7z09ha8/XgDA\nqgUbWDBjGR8sGkNUtOvYdyV58+FPmPflcgBWL9zIinm/8v68ZwgL1/+CNlIf2Om0nAJ0O039W4FZ\nTstRxpiVWK88XxaRr9xtZIy5A7gDQERISPC8V25YWFiZ6gcaPb7AFszH5+tj028GpU4jKzOb7z9b\nUqQsLfUQy2evo9egcz3aR/rhYyyY/nORsl3b97JmyWa6XHS212JVZ8zdIHv5bsowxtwEdAF6ORU3\nEpFUY0xTYJ4xZr2IbCu+rYiMB8YX7L8sPZWDvWezHl9gC+bj89axJSUleVRPB6FVqhzKMlhuZR1Y\nNwClAA2dlhsALiOqGmP6Ak8CA0Uks6BcRFIdf28HFgCdKjJYpVTw0uRMqdOIiAyn//XnFymrXb8m\nXft5PjtEtepV6V3sKVv9pnXodMFZXolRec3PQAtjTBNjTAQwBJjhXMEY0wl4Hysx2+dUXsMYE+n4\nOQHoiVNbNaWUKgt9ralUKe4afR31m9Zh1YINNG3diCtG9CpTezOAB18fRpM2DVj742YatUji2nsu\nJTSscs4jalcikmOMuRf4HmsojYkissEYMwZYKSIzgNeAasBUYwycGjLjLOB9Y0we1k3vy8V6eZ6x\nE0cPkFvds9k+0tN2ER4ZTVTcqY4rOSdP8tfahTQ6pw9hYacu/dtXzOHk0QO06TukyD42zJ5Ecode\nVKvToLDsyO4dpG1bT/PzryhSNzPjCKHhEYRFRpcaW/bJY+Tn5RFR1XV+XaWUJSQ/322TikCRn5rq\n+3ncAuW9usbpfYESazDH6WizESzviku9hh3ds4Mfxj5A2rZ1RMfVoMuQhzmrWCJVIOPAbqY9fhUn\nDlvnNLFZewa98AWzXrqVXWtPTdXUuOulXHjbi3xyxzlFtu/78Dj+WDaLbUumF5aFR1djxMdr+WhY\nR7JPnJqPs8sNj9C27/XMe2sUO9csJDQ8knaXj6Dr9Q+7jS0vL5cfP3yWLfOmkp+fR9Mel9Hr7pcJ\ni4gqrBMo/27LS48vcHm5zVmp1y99cqaUUja24L1HSdu2DoATRw+x+IOnqNemK/FJrnPRfv/y7YWJ\nGUDatnUseOfhIokZwJ8rvufPn+e4bD/3n3e5lGWfyODTkb2KJGYAKye/Rsa+nez8ZQEAuVknWTPt\nPWo370Djc/u57Gfz3ClsmjO5cHnbjzOpXq8JXcz9pzl6pSonbXOmlFI2lZuTxZ5NRXv6kp9fZGJy\nZ4d2uXQOdZuEWfvJc1/uRnpaitvy1PU/uZTtWv+j27ruylN/dd1eKaXJmVJK2VZoWASxdRq5lLt7\nagYQFRvvUhZXt8kZx1ElLMJteXz9Zm7KmpdQ1zXmko5DqcpOkzOllLKx84b/H6HhpzqgNDvvCpLO\n7uG27gW3PwdOQ7eERUYz4LEPiIgp2pEgunoC3Yf9n8v2DTr2Ijo+0aV82IRVLmUJzdpz7pCHiIo9\n1emgdotOtOr9N7extbtsRJHELaZWPTpdPdJtXaUqO+0QUA6B0uhR4/S+QIk1mOOsbB0CAE4c2c+u\nX5fSsGU7IhMbn7bu8SP7WTdzApHV4ulwxW1UcfTMXDl1LH8s+44WFw6m46A7ADi850+mPTaY/Nxs\n+v1jPA3bnQfAmhkfsHbaOGokt2Tgs58W7vub54dxeNc2ug97kmbdBwBW78udaxYRGRNHUtsehFQp\n+Z4/LzeHlLWLycvNoUGHCwmLKNrrOVD+3ZaXHl/g8nWHAE3OyiFQ/gFqnN4XKLEGc5yVMTkrECi/\n1/LS4wtswXx8vk7O9LWmUkoppZSNaHKmlFJKKWUjmpwppZRSStmIJmdKKaWUUjaiyZlSSiml+Yz4\noAAADzJJREFUlI1ocqaUUkopZSOanCmllFJK2YhPJj43xjQEPgHqAnnAeBEZW6xOCDAWuAw4DgwX\nkdW+iC/Y5Obksm7pVhISa9GgVSIhIcEyJJRSqsDRfTtZO308GWkpNOx8EW0vuem0A8C6s2fLKjbM\n+oTc7ExaXXQtyV36cDLjMFNH9efE4f1UCQ/n/BHP0rrvdRV0FEopd3ySnAE5wEMistoYEwusMsbM\nEZGNTnUGAC0cf7oB7zn+VmWQlnqIx8zr7PpjHwAtOiTz0qcPUq16VT9HppTylqzj6Ux/6lpOHE4D\nYOeaRWSk7aL70Mc93kfa9vV8/eyN5OVmA9YE6X1Hvc28f48iLycLgLzsLBaNf4K6Z53rdm5MpVTF\n8MlrTRHZXfAUTETSgU1A/WLVBgGfiEi+iCwD4o0x9XwRXzD5dOw3hYkZwG9rdzB94jw/RqSU8rY/\nVnxfmJgV2DTnU8oy48vmuVMKE7MC62Z8WJiYOfth7H3lC1QpVS6+enJWyBjTGOgELC+2qj6w02k5\nxVG2u9j2dwB3AIgICQkJFRZrScLCwvzyuZ5I2bbXpSx1e5pt4wV7n8/iAiVWjVMppQKXT5MzY0w1\n4AvgARE5Wmy1u4ZRLreBIjIeGF+w3h/zeNl5/rDW5zRh3dItRcpadU62bbxg7/NZXKDEGsxxOuam\nq9SadL2UFZP/WeTp2Vn9ri9T+9LWfa9jy/zPizw9az/wVua9NYq87KJPz/qMeufMg1ZKecxnyZkx\nJhwrMZskIl+6qZICNHRabgD4flbzAHf9fZexY3Mqy+euo0qVKlw0uCuX3XShv8NSSnlRRNVYBj0/\nlXUzJpCetpNGnS+mTb8byrSPxKbtuHL0ZDZ8919ysk5aHQLOuZiks3vw+agBHD+SRmhYBD1HPEN8\n3eQKOhKllDu+6q0ZAnwIbBKRN0qoNgO41xjzGVZHgCMisruEuqoE0TFRjP74Xg7sPUzt2onkhmSX\nvpFSKuDE1W7I+beNPqN91GnZmTotOxcpi6oWz03jl57RfpVSZ8ZXT856AkOB9caYNY6yJ4BGACIy\nDvgWaxiN37GG0hjho9iCUq068dRIqB4Qr7aUUkopdYpPkjMRWYL7NmXOdfKBkb6IRymllFLKrnSG\nAKWUUkopG9HkTCmllFLKRjQ5U0oppZSyEU3OlFJKKaVsRJMzpZRSSikb0eRMKaWUUspGNDlTSiml\nlLIRTc6UUkoppWwkJD/fZW7xQBLQwSulys3zGb7tTa9hSlU+pV6/Av3JWYg//hhjVvnrszVOjVXj\nJITgEZS/1/L+0eML7D/BfHxePrZSBXpyppRSSikVVDQ5U0oppZSyEU3Oyme8vwPwkMbpfYESq8YZ\nnIL9fOnxBbZgPj6fHlugdwhQSimllAoq+uRMKaWUUspGwvwdgJ0ZY0KBlcAuEbmi2LrhwGvALkfR\n2yIywbcRFsbyJ5AO5AI5ItKl2PoQYCxwGXAcGC4iq20YZ29gOvCHo+hLERnjyxgdccQDE4CzsYY6\nuEVEljqtt8X59DDW3vj5nBpjWgFTnIqaAk+LyJtOdWxzTu3IGDMRuALYJyJn+zsebzLGNAQ+AeoC\necB4ERnr36i8xxgTBSwCIrG+cz8XkWf8G5X3ne77MtCV9t1VETQ5O737gU1AXAnrp4jIvT6M53Qu\nEpH9JawbALRw/OkGvOf42x9OFyfAYhv8xx4LfCci1xhjIoCqxdbb6XyWFiv4+ZyKyBagIxRewHcB\n04pVs9M5taP/AG9jJTHBJgd4SERWG2NigVXGmDkistHfgXlJJnCxiGQYY8KBJcaYWSKyzN+BeVlp\n35eBrrTvLq/S15olMMY0AC7HeioR6AYBn4hIvuOCEG+MqefvoOzIGBMHXAh8CCAiWSJyuFg1W5xP\nD2O1mz7ANhHZUazcFufUrkRkEXDQ33FUBBHZXfCUVETSsb7g6/s3Ku9x/JvOcCyGO/4EVWPvIPu+\ntAV9clayN4F/ALGnqfM3Y8yFwFbgQRHZ6ZPIXOUDs40x+cD7IlK8V0l9wDm2FEfZbh/FV6C0OAF6\nGGPWAqnAwyKywacRWq/c0oCPjDEdgFXA/SJyzKmOXc6nJ7GC/8+psyHAp27K7XJOlR8ZYxoDnYDl\nfg7FqxxPjFcBzYF3RCSojg/Pvi8DmSffXV6lT87cMMYUtO1YdZpqM4HGItIemAt87JPg3OspIp2x\nXg2NdCSMztyNSOyPO7fS4lwNJItIB+At4CtfB4h1w9IZeE9EOgHHgMeK1bHL+fQkVjucUwAcr10H\nAlPdrLbLOVV+YoypBnwBPCAiR/0djzeJSK6IdAQaAF2NMUHTbtDD78tAV9p3l9dpcuZeT2CgoxHg\nZ8DFxpj/OVcQkQMikulY/AA4x7chFokl1fH3Pqy2PF2LVUkBGjotN8B6iuJTpcUpIkcLHv+LyLdA\nuDEmwcdhpgApTne2n2MlQMXr+P184kGsNjmnBQYAq0Vkr5t1djmnyg8cbbG+ACaJyJf+jqeiOJod\nLAD6+zkUbyr1+zLQefAd63WanLkhIo+LSAMRaYz1GmaeiNzkXKdYe5iBWO0kfM4YE+NoRIsxJga4\nBPi1WLUZwM3GmBBjTHfgiIj49HWRJ3EaY+o6eu1hjOmK9e/zgC/jFJE9wE5HD0Ow2kgVb5js9/MJ\nnsVqh3Pq5Hrcv9IEm5xT5XuOf58fAptE5A1/x+NtxphER69qjDHRQF9gs3+j8h5Pvi8DmYffsV6n\nbc7KwBgzBlgpIjOA+4wxA7F6Gh0EhvsprDrANGMMWL/PySLynTHmLgARGQd8izVEwe9YwxSMsGmc\n1wB3G2NygBPAEBHxx6utvwOTHK/htgMjbHg+C5QWqy3OqTGmKtAPuNOpzK7n1HaMMZ8CvYEEY0wK\n8IyIfOjfqLymJzAUWG+MWeMoe8LxpDcY1AM+drQ7qwKIiHzt55iU59x+d1X0h+oMAUoppZRSNqKv\nNZVSSimlbESTM6WUUkopG9HkTCmllFLKRjQ5U0oppZSyEU3OlFJKKaVsRIfSULblGNTwNhGZ62bd\nf7AGYH3KTnEppSo3xxRUfwDhIpLjZv2f+OH6UVpcyl40OVOlMsacD7wKtAVysQbcfUBEfvZrYD7g\nzyRQKeU9jqSoDtY17BjW2Hp/d5qUvKTthmMlU+dXdIzepDeRgU1fa6rTMsbEAV9jzctYE2sy6tFA\n5um2U0opG7pSRKphTXN2LqA3XcqW9MmZKk1LABEpmHbnBDDbuYIx5hbgEaAusAK4Q0R2ONblA/cD\nDwBxwEfAoyKSZ4xphjUvaQesSa6/B0Y65p8rE8fku88DjbGmMLpLRNY51v0JvA3cDCQD3wHDROSk\nY/0/gAcdMTztiKkFcDFwI5BvjHkAmC8iVzo+sqMx5g13+1NK2ZuI7DLGzALOBjDGVAfewJqlIg/r\nOvUM1vVvHNactBlAjojEG2Mux7reNAOOAB+KyLNljcMYUwX4B3A7EA/8gHXtOuj0GnI48BxQFfiX\niLzg2DbaEdtAYI8j5vtEpIEx5r9AI2CmMSYXGAOI42NvNMa47E/Ziz45U6XZCuQaYz42xgwwxtRw\nXmmMuQp4ArgaSAQW4zp/4mCgC9bd6iDgFkd5CPASkASchTXx9bNlDdAY0xmYiDU1UC3gfWCGMSbS\nuRrWZMNNgPY4ptsyxvQHRmHNd9cc6FWwgYiMByYBr4pINafErMT9KaXszxjTECsR+8VR9DHWVHzN\ngU5Y8yfeJiKbgLuApY5rQLyj/jGsm7144HKsKdKuKkco9wFXYV13koBDwDvF6pwPtMKaO/dpY8xZ\njvJnsG5Gm2JNjVY4n6WIDAX+wvGkUERe9WB/ykY0OVOnJSJHsf4z52M9UUozxswwxtRxVLkTeElE\nNjkamb6I9VQp2Wk3r4jIQRH5C3gTawJsROR3EZkjIpkikoZ159qLsrsdeF9ElotIroh8jPXatbtT\nnX+LSKqIHARmAh0d5Qb4SEQ2iMhxrFe2nihpf0op+/rKGHMYWAIsBF50XMsGYLWjPSYi+4B/YU3i\n7ZaILBCR9SKS53hC/ynlu3bdCTwpIikikol1c3qNMcb5rdZoETkhImuBtVhvGsC6dr0oIodEJAX4\nt4efWdL+lI3oa01VKsfd43AAY0xr4H+cSrKSgbHGmNedNgnBapu2w7G802ndDqw7RIwxtbEuKBcA\nsVg3C4fKEWIyMMwY83ensoiCz3HY4/Tzcad1ScBKp3XOsZ5OSftTStnXVcUbyBtj2gHhwG7H5NZg\nXYtKvBYYY7oBL2O9Fo0AIoGp5YgnGWtS7TynslysjgsFil9rqjl+TioWY3mvXdVKqqj8R5MzVSYi\nstnRg/FOR9FO4AURmXSazRoCGxw/NwJSHT+/hPVErr2IHHC8Fni7HGEVxFCethO7gQbFYnWWX459\nKqUCx06sJ+0JJQwx4e4aMBnrWjVARE4aY94EEsr52beIyI/FVzjanJ1OwbVro2NZr11BRJMzdVqO\nJ2WXA1NEJMXRVuN6YJmjyjjgOWPMGhHZ4GhYe4mION9FPmKMWY51h3Y/1utLsJ6WHQEOG2PqY3Uq\nKI8PsO4+52J1SKgK9AYWiUh6KdsKMNHRgHYHVocAZ3ux2nQopYKQiOw2xswGXjfG/B+QgdWWtIGI\nLMS6BjQwxkSISJZjs1jgoCMx6wrcQLGOUh4aB7xgjBkmIjuMMYnAeSIy3ZPQgceNMT9jXfPuLbZe\nr10BTNucqdKkA92A5caYY1hJ2a/AQwAiMg14BfjMGHPUsW5AsX1MB1YBa4BvgA8d5aOxOgkccZR/\nWZ4ARWQlVruzt7Fei/6Ohw30RWQW1qvV+Y7tljpWFQwV8iHQxhhz2BjzVXniU0rZ3s1Yryc3Yl1D\nPgfqOdbNw3ryv8cYs99Rdg8wxhiTjnVDJ5TPWGAGMNuxr2VY11tPjAFSsHp0znXE7DzE0UvAU45r\n18PljE/5SUh+vj75VBXHMZRGCxH53d+xeMLRc+lXIFJH0VZKBQpjzN3AEBEpT8cEZTP6WlNVesaY\nwVhP7mKwngLO1MRMKWVnxph6WK8tl2KNy/gQ5Wuzq2xIX2sqZXVuSAO2YfWUutu/4SilVKkisMZ0\nTMd69TodeNevESmv0deaSimllFI2ok/OlFJKKaVsRJMzpZRSSikb0eRMKaWUUspGNDlTSimllLIR\nTc6UUkoppWxEkzOllFJKKRv5fzI2po/1ObCQAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x3c4d240>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "iris = ds.load_iris()\n",
    "x_iris = iris.data[:100]\n",
    "y_iris = iris.target[:100]\n",
    "\n",
    "pl.figure(figsize=(10, 5))\n",
    "\n",
    "pl.subplot(1, 2, 1)\n",
    "pl.scatter(x_iris[:, 0], x_iris[:, 1], c=y_iris, cmap=pl.cm.PuOr, lw=0, s=30)\n",
    "plt.xlabel('Sepal length')\n",
    "plt.ylabel('Sepal width')\n",
    "\n",
    "pl.subplot(1, 2, 2)\n",
    "pl.scatter(x_iris[:, 2], x_iris[:, 3], c=y_iris, cmap=pl.cm.PuOr, lw=0, s=30)\n",
    "plt.xlabel('Petal length')\n",
    "plt.ylabel('Petal width')\n",
    "pl.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Видно, что классы разделяются, поэтому можно надеяться, что наш алгоритм \"найдет\" кластеры, соответствующие исходным классам. Результат работы реализованного алгоритма кластеризации предлагается сравнить с эталонной кластеризацией. Для этого предлагается изучить метрику ([adjusted rand score](http://scikit-learn.org/stable/modules/generated/sklearn.metrics.adjusted_rand_score.html)). В случае если значение этой метрики отличается от 1, предлагается поработать над улучшением реализации своего алгоритма."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Wall time: 23 ms\n",
      "Adjusted Rand index for iris is: 1.00\n"
     ]
    }
   ],
   "source": [
    "%time pred_iris = Clustering(k=2, linkage='single').fit_predict(x_iris)\n",
    "print (\"Adjusted Rand index for iris is: %.2f\" % smt.adjusted_rand_score(y_iris, pred_iris))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Wall time: 12 ms\n",
      "GMM score 1.0. GMM time 0.009000539779663086. AGGL score 1.0. AGGL time 0.013000726699829102\n"
     ]
    }
   ],
   "source": [
    "# Давайте проверим, как справляются sklearn реализации\n",
    "sklearn_gmm = GaussianMixture(n_components=2)\n",
    "gmm_t0 = time.time()\n",
    "sklearn_gmm.fit(x_iris)\n",
    "gmm_diff = time.time() - gmm_t0\n",
    "gmm_score = smt.adjusted_rand_score(y_iris, sklearn_gmm.predict(x_iris))\n",
    "\n",
    "sklearn_aggl = AgglomerativeClustering(n_clusters=2)\n",
    "aggl_t0 = time.time()\n",
    "%time aggl_pred = sklearn_aggl.fit_predict(x_iris)\n",
    "aggl_diff = time.time() - aggl_t0\n",
    "aggl_score = smt.adjusted_rand_score(y_iris, aggl_pred)\n",
    "print (\"GMM score {}. GMM time {}. AGGL score {}. AGGL time {}\".format(gmm_score, gmm_diff, aggl_score, aggl_diff))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Сверьте Ваш алгоритм с этими числами. Уверен, что у Вас получится не хуже!"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "# Боевое применение (2  балла)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "Алгоритмы кластеризации прекрасны тем, что они позволяют быстро понять, как устроены наши данные. Давайте применим Ваш алгоритм для анализа реальной задачи!"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Важное замечание: в этой части задания студенту самому предлагается разобраться с данными и их форматом в качестве полезного упраженения. Не принимайте это близко к сердцу :)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Ввозьмем датасет различных стран.  \n",
    "Данные нужно скачать тут https://data.worldbank.org/data-catalog/world-development-indicators.   \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Подход следующий: фиксируем год, для каждой страны берём индикаторы по зафиксированному году, кластеризуем по индикаторам. \n",
    "Разбиение должно быть объяснимым, в противном случае, скорее всего нужно лучше настроить параметры кластеризации.   \n",
    "\n",
    "Необходимо показать, какие страны попали в общий кластер в и объяснить из-за каких признаков это произошло. Если страны были в одном кластере, а спустя несколько лет разъехались по разным кластерам, попробуйте это объяснить. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# Место для Вашего кластерного анализа"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "raw_data = pd.read_csv(\"data/WDIData.csv\").drop(columns=[\"Unnamed: 62\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country Name</th>\n",
       "      <th>Country Code</th>\n",
       "      <th>Indicator Name</th>\n",
       "      <th>Indicator Code</th>\n",
       "      <th>1960</th>\n",
       "      <th>1961</th>\n",
       "      <th>1962</th>\n",
       "      <th>1963</th>\n",
       "      <th>1964</th>\n",
       "      <th>1965</th>\n",
       "      <th>...</th>\n",
       "      <th>2008</th>\n",
       "      <th>2009</th>\n",
       "      <th>2010</th>\n",
       "      <th>2011</th>\n",
       "      <th>2012</th>\n",
       "      <th>2013</th>\n",
       "      <th>2014</th>\n",
       "      <th>2015</th>\n",
       "      <th>2016</th>\n",
       "      <th>2017</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Arab World</td>\n",
       "      <td>ARB</td>\n",
       "      <td>2005 PPP conversion factor, GDP (LCU per inter...</td>\n",
       "      <td>PA.NUS.PPP.05</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Arab World</td>\n",
       "      <td>ARB</td>\n",
       "      <td>2005 PPP conversion factor, private consumptio...</td>\n",
       "      <td>PA.NUS.PRVT.PP.05</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Arab World</td>\n",
       "      <td>ARB</td>\n",
       "      <td>Access to clean fuels and technologies for coo...</td>\n",
       "      <td>EG.CFT.ACCS.ZS</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>81.243897</td>\n",
       "      <td>81.844982</td>\n",
       "      <td>82.407647</td>\n",
       "      <td>82.827636</td>\n",
       "      <td>83.169227</td>\n",
       "      <td>83.587141</td>\n",
       "      <td>83.954293</td>\n",
       "      <td>84.230630</td>\n",
       "      <td>84.570425</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Arab World</td>\n",
       "      <td>ARB</td>\n",
       "      <td>Access to electricity (% of population)</td>\n",
       "      <td>EG.ELC.ACCS.ZS</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>85.432827</td>\n",
       "      <td>85.189815</td>\n",
       "      <td>86.136134</td>\n",
       "      <td>86.782683</td>\n",
       "      <td>87.288244</td>\n",
       "      <td>88.389705</td>\n",
       "      <td>88.076774</td>\n",
       "      <td>88.517967</td>\n",
       "      <td>88.768654</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Arab World</td>\n",
       "      <td>ARB</td>\n",
       "      <td>Access to electricity, rural (% of rural popul...</td>\n",
       "      <td>EG.ELC.ACCS.RU.ZS</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>73.402277</td>\n",
       "      <td>73.530494</td>\n",
       "      <td>74.543489</td>\n",
       "      <td>75.770972</td>\n",
       "      <td>76.772916</td>\n",
       "      <td>78.839139</td>\n",
       "      <td>77.487377</td>\n",
       "      <td>78.564439</td>\n",
       "      <td>78.958780</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 62 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "  Country Name Country Code  \\\n",
       "0   Arab World          ARB   \n",
       "1   Arab World          ARB   \n",
       "2   Arab World          ARB   \n",
       "3   Arab World          ARB   \n",
       "4   Arab World          ARB   \n",
       "\n",
       "                                      Indicator Name     Indicator Code  1960  \\\n",
       "0  2005 PPP conversion factor, GDP (LCU per inter...      PA.NUS.PPP.05   NaN   \n",
       "1  2005 PPP conversion factor, private consumptio...  PA.NUS.PRVT.PP.05   NaN   \n",
       "2  Access to clean fuels and technologies for coo...     EG.CFT.ACCS.ZS   NaN   \n",
       "3            Access to electricity (% of population)     EG.ELC.ACCS.ZS   NaN   \n",
       "4  Access to electricity, rural (% of rural popul...  EG.ELC.ACCS.RU.ZS   NaN   \n",
       "\n",
       "   1961  1962  1963  1964  1965  ...        2008       2009       2010  \\\n",
       "0   NaN   NaN   NaN   NaN   NaN  ...         NaN        NaN        NaN   \n",
       "1   NaN   NaN   NaN   NaN   NaN  ...         NaN        NaN        NaN   \n",
       "2   NaN   NaN   NaN   NaN   NaN  ...   81.243897  81.844982  82.407647   \n",
       "3   NaN   NaN   NaN   NaN   NaN  ...   85.432827  85.189815  86.136134   \n",
       "4   NaN   NaN   NaN   NaN   NaN  ...   73.402277  73.530494  74.543489   \n",
       "\n",
       "        2011       2012       2013       2014       2015       2016  2017  \n",
       "0        NaN        NaN        NaN        NaN        NaN        NaN   NaN  \n",
       "1        NaN        NaN        NaN        NaN        NaN        NaN   NaN  \n",
       "2  82.827636  83.169227  83.587141  83.954293  84.230630  84.570425   NaN  \n",
       "3  86.782683  87.288244  88.389705  88.076774  88.517967  88.768654   NaN  \n",
       "4  75.770972  76.772916  78.839139  77.487377  78.564439  78.958780   NaN  \n",
       "\n",
       "[5 rows x 62 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "raw_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n",
      "True\n"
     ]
    }
   ],
   "source": [
    "print(len(set(raw_data[\"Indicator Name\"])) == len(set(raw_data[\"Indicator Code\"])))\n",
    "print(len(set(raw_data[\"Country Name\"])) == len(set(raw_data[\"Country Code\"])))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "''"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'''%%time\n",
    "years_data = {}\n",
    "size = len(raw_data.columns[4:])\n",
    "for i, year in zip(range(size), raw_data.columns[4:]):\n",
    "    print(\"\\r {} ({} from {})\".format(year, i + 1, size), end = '')\n",
    "    cur_data = raw_data[[\"Country Name\", \"Indicator Name\", year]]\n",
    "    cur_year = {}\n",
    "    for country in pd.unique(cur_data[\"Country Name\"]):\n",
    "        cur_country = cur_data[cur_data[\"Country Name\"] == country]\n",
    "        cur_year[country] = cur_country.sort_values(\"Indicator Name\")[year].values\n",
    "    years_data[year] = pd.DataFrame(cur_year, index=pd.unique(cur_data[\"Indicator Name\"]))\n",
    "print()\n",
    "\n",
    "#  2017 (58 from 58)\n",
    "#  Wall time: 8min 11s'''\n",
    "''"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "''"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'''for year in years_data:\n",
    "    years_data[year].to_csv(\"data/Data_parsed_{}.csv\".format(year))'''\n",
    "''"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " 2017 (58 from 58)\n",
      "Wall time: 7.77 s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "years_data = {}\n",
    "size = len(raw_data.columns[4:])\n",
    "for i, year in zip(range(size), raw_data.columns[4:]):\n",
    "    print(\"\\r {} ({} from {})\".format(year, i + 1, size), end='')\n",
    "    years_data[year] = pd.read_csv(\"data/Data_parsed_{}.csv\".format(year))\n",
    "    years_data[year] = years_data[year].rename(index=years_data[year][\"Unnamed: 0\"]).drop(columns=[\"Unnamed: 0\"])\n",
    "print()\n",
    "\n",
    "# Wall time: 7.77 s"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>2005 PPP conversion factor, GDP (LCU per international $)</th>\n",
       "      <th>2005 PPP conversion factor, private consumption (LCU per international $)</th>\n",
       "      <th>Access to clean fuels and technologies for cooking  (% of population)</th>\n",
       "      <th>Access to electricity (% of population)</th>\n",
       "      <th>Access to electricity, rural (% of rural population)</th>\n",
       "      <th>Access to electricity, urban (% of urban population)</th>\n",
       "      <th>Account ownership at a financial institution or with a mobile-money-service provider (% of population ages 15+)</th>\n",
       "      <th>Account ownership at a financial institution or with a mobile-money-service provider, female (% of population ages 15+)</th>\n",
       "      <th>Account ownership at a financial institution or with a mobile-money-service provider, male (% of population ages 15+)</th>\n",
       "      <th>Account ownership at a financial institution or with a mobile-money-service provider, older adults (% of population ages 25+)</th>\n",
       "      <th>...</th>\n",
       "      <th>Women participating in the three decisions (own health care, major household purchases, and visiting family) (% of women age 15-49)</th>\n",
       "      <th>Women who believe a husband is justified in beating his wife (any of five reasons) (%)</th>\n",
       "      <th>Women who believe a husband is justified in beating his wife when she argues with him (%)</th>\n",
       "      <th>Women who believe a husband is justified in beating his wife when she burns the food (%)</th>\n",
       "      <th>Women who believe a husband is justified in beating his wife when she goes out without telling him (%)</th>\n",
       "      <th>Women who believe a husband is justified in beating his wife when she neglects the children (%)</th>\n",
       "      <th>Women who believe a husband is justified in beating his wife when she refuses sex with him (%)</th>\n",
       "      <th>Women who were first married by age 15 (% of women ages 20-24)</th>\n",
       "      <th>Women who were first married by age 18 (% of women ages 20-24)</th>\n",
       "      <th>Women's share of population ages 15+ living with HIV (%)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Arab World</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>37.165211</td>\n",
       "      <td>25.635403</td>\n",
       "      <td>48.328518</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Caribbean small states</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Central Europe and the Baltics</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Early-demographic dividend</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>48.378037</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>East Asia &amp; Pacific</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>73.693977</td>\n",
       "      <td>71.484467</td>\n",
       "      <td>75.922256</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 1600 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                2005 PPP conversion factor, GDP (LCU per international $)  \\\n",
       "Arab World                                                                    NaN           \n",
       "Caribbean small states                                                        NaN           \n",
       "Central Europe and the Baltics                                                NaN           \n",
       "Early-demographic dividend                                                    NaN           \n",
       "East Asia & Pacific                                                           NaN           \n",
       "\n",
       "                                2005 PPP conversion factor, private consumption (LCU per international $)  \\\n",
       "Arab World                                                                    NaN                           \n",
       "Caribbean small states                                                        NaN                           \n",
       "Central Europe and the Baltics                                                NaN                           \n",
       "Early-demographic dividend                                                    NaN                           \n",
       "East Asia & Pacific                                                           NaN                           \n",
       "\n",
       "                                Access to clean fuels and technologies for cooking  (% of population)  \\\n",
       "Arab World                                                                    NaN                       \n",
       "Caribbean small states                                                        NaN                       \n",
       "Central Europe and the Baltics                                                NaN                       \n",
       "Early-demographic dividend                                                    NaN                       \n",
       "East Asia & Pacific                                                           NaN                       \n",
       "\n",
       "                                Access to electricity (% of population)  \\\n",
       "Arab World                                                          NaN   \n",
       "Caribbean small states                                              NaN   \n",
       "Central Europe and the Baltics                                      NaN   \n",
       "Early-demographic dividend                                          NaN   \n",
       "East Asia & Pacific                                                 NaN   \n",
       "\n",
       "                                Access to electricity, rural (% of rural population)  \\\n",
       "Arab World                                                                    NaN      \n",
       "Caribbean small states                                                        NaN      \n",
       "Central Europe and the Baltics                                                NaN      \n",
       "Early-demographic dividend                                                    NaN      \n",
       "East Asia & Pacific                                                           NaN      \n",
       "\n",
       "                                Access to electricity, urban (% of urban population)  \\\n",
       "Arab World                                                                    NaN      \n",
       "Caribbean small states                                                        NaN      \n",
       "Central Europe and the Baltics                                                NaN      \n",
       "Early-demographic dividend                                                    NaN      \n",
       "East Asia & Pacific                                                           NaN      \n",
       "\n",
       "                                Account ownership at a financial institution or with a mobile-money-service provider (% of population ages 15+)  \\\n",
       "Arab World                                                                    NaN                                                                 \n",
       "Caribbean small states                                                        NaN                                                                 \n",
       "Central Europe and the Baltics                                                NaN                                                                 \n",
       "Early-demographic dividend                                                    NaN                                                                 \n",
       "East Asia & Pacific                                                           NaN                                                                 \n",
       "\n",
       "                                Account ownership at a financial institution or with a mobile-money-service provider, female (% of population ages 15+)  \\\n",
       "Arab World                                                              37.165211                                                                         \n",
       "Caribbean small states                                                        NaN                                                                         \n",
       "Central Europe and the Baltics                                                NaN                                                                         \n",
       "Early-demographic dividend                                                    NaN                                                                         \n",
       "East Asia & Pacific                                                     73.693977                                                                         \n",
       "\n",
       "                                Account ownership at a financial institution or with a mobile-money-service provider, male (% of population ages 15+)  \\\n",
       "Arab World                                                              25.635403                                                                       \n",
       "Caribbean small states                                                        NaN                                                                       \n",
       "Central Europe and the Baltics                                                NaN                                                                       \n",
       "Early-demographic dividend                                                    NaN                                                                       \n",
       "East Asia & Pacific                                                     71.484467                                                                       \n",
       "\n",
       "                                Account ownership at a financial institution or with a mobile-money-service provider, older adults (% of population ages 25+)  \\\n",
       "Arab World                                                              48.328518                                                                               \n",
       "Caribbean small states                                                        NaN                                                                               \n",
       "Central Europe and the Baltics                                                NaN                                                                               \n",
       "Early-demographic dividend                                                    NaN                                                                               \n",
       "East Asia & Pacific                                                     75.922256                                                                               \n",
       "\n",
       "                                                          ...                             \\\n",
       "Arab World                                                ...                              \n",
       "Caribbean small states                                    ...                              \n",
       "Central Europe and the Baltics                            ...                              \n",
       "Early-demographic dividend                                ...                              \n",
       "East Asia & Pacific                                       ...                              \n",
       "\n",
       "                                Women participating in the three decisions (own health care, major household purchases, and visiting family) (% of women age 15-49)  \\\n",
       "Arab World                                                                    NaN                                                                                     \n",
       "Caribbean small states                                                        NaN                                                                                     \n",
       "Central Europe and the Baltics                                                NaN                                                                                     \n",
       "Early-demographic dividend                                                    NaN                                                                                     \n",
       "East Asia & Pacific                                                           NaN                                                                                     \n",
       "\n",
       "                                Women who believe a husband is justified in beating his wife (any of five reasons) (%)  \\\n",
       "Arab World                                                                    NaN                                        \n",
       "Caribbean small states                                                        NaN                                        \n",
       "Central Europe and the Baltics                                                NaN                                        \n",
       "Early-demographic dividend                                                    NaN                                        \n",
       "East Asia & Pacific                                                           NaN                                        \n",
       "\n",
       "                                Women who believe a husband is justified in beating his wife when she argues with him (%)  \\\n",
       "Arab World                                                                    NaN                                           \n",
       "Caribbean small states                                                        NaN                                           \n",
       "Central Europe and the Baltics                                                NaN                                           \n",
       "Early-demographic dividend                                                    NaN                                           \n",
       "East Asia & Pacific                                                           NaN                                           \n",
       "\n",
       "                                Women who believe a husband is justified in beating his wife when she burns the food (%)  \\\n",
       "Arab World                                                                    NaN                                          \n",
       "Caribbean small states                                                        NaN                                          \n",
       "Central Europe and the Baltics                                                NaN                                          \n",
       "Early-demographic dividend                                                    NaN                                          \n",
       "East Asia & Pacific                                                           NaN                                          \n",
       "\n",
       "                                Women who believe a husband is justified in beating his wife when she goes out without telling him (%)  \\\n",
       "Arab World                                                                    NaN                                                        \n",
       "Caribbean small states                                                        NaN                                                        \n",
       "Central Europe and the Baltics                                                NaN                                                        \n",
       "Early-demographic dividend                                                    NaN                                                        \n",
       "East Asia & Pacific                                                           NaN                                                        \n",
       "\n",
       "                                Women who believe a husband is justified in beating his wife when she neglects the children (%)  \\\n",
       "Arab World                                                                    NaN                                                 \n",
       "Caribbean small states                                                        NaN                                                 \n",
       "Central Europe and the Baltics                                                NaN                                                 \n",
       "Early-demographic dividend                                                    NaN                                                 \n",
       "East Asia & Pacific                                                           NaN                                                 \n",
       "\n",
       "                                Women who believe a husband is justified in beating his wife when she refuses sex with him (%)  \\\n",
       "Arab World                                                                    NaN                                                \n",
       "Caribbean small states                                                        NaN                                                \n",
       "Central Europe and the Baltics                                                NaN                                                \n",
       "Early-demographic dividend                                                    NaN                                                \n",
       "East Asia & Pacific                                                           NaN                                                \n",
       "\n",
       "                                Women who were first married by age 15 (% of women ages 20-24)  \\\n",
       "Arab World                                                                    NaN                \n",
       "Caribbean small states                                                        NaN                \n",
       "Central Europe and the Baltics                                                NaN                \n",
       "Early-demographic dividend                                                    NaN                \n",
       "East Asia & Pacific                                                           NaN                \n",
       "\n",
       "                                Women who were first married by age 18 (% of women ages 20-24)  \\\n",
       "Arab World                                                                    NaN                \n",
       "Caribbean small states                                                        NaN                \n",
       "Central Europe and the Baltics                                                NaN                \n",
       "Early-demographic dividend                                                    NaN                \n",
       "East Asia & Pacific                                                           NaN                \n",
       "\n",
       "                                Women's share of population ages 15+ living with HIV (%)  \n",
       "Arab World                                                                    NaN         \n",
       "Caribbean small states                                                        NaN         \n",
       "Central Europe and the Baltics                                                NaN         \n",
       "Early-demographic dividend                                              48.378037         \n",
       "East Asia & Pacific                                                           NaN         \n",
       "\n",
       "[5 rows x 1600 columns]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "years_data[\"2017\"].T.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "years_data_filled = {}\n",
    "for year in years_data:\n",
    "    years_data_filled[year] = years_data[year].fillna(0.0).T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>2005 PPP conversion factor, GDP (LCU per international $)</th>\n",
       "      <th>2005 PPP conversion factor, private consumption (LCU per international $)</th>\n",
       "      <th>Access to clean fuels and technologies for cooking  (% of population)</th>\n",
       "      <th>Access to electricity (% of population)</th>\n",
       "      <th>Access to electricity, rural (% of rural population)</th>\n",
       "      <th>Access to electricity, urban (% of urban population)</th>\n",
       "      <th>Account ownership at a financial institution or with a mobile-money-service provider (% of population ages 15+)</th>\n",
       "      <th>Account ownership at a financial institution or with a mobile-money-service provider, female (% of population ages 15+)</th>\n",
       "      <th>Account ownership at a financial institution or with a mobile-money-service provider, male (% of population ages 15+)</th>\n",
       "      <th>Account ownership at a financial institution or with a mobile-money-service provider, older adults (% of population ages 25+)</th>\n",
       "      <th>...</th>\n",
       "      <th>Women participating in the three decisions (own health care, major household purchases, and visiting family) (% of women age 15-49)</th>\n",
       "      <th>Women who believe a husband is justified in beating his wife (any of five reasons) (%)</th>\n",
       "      <th>Women who believe a husband is justified in beating his wife when she argues with him (%)</th>\n",
       "      <th>Women who believe a husband is justified in beating his wife when she burns the food (%)</th>\n",
       "      <th>Women who believe a husband is justified in beating his wife when she goes out without telling him (%)</th>\n",
       "      <th>Women who believe a husband is justified in beating his wife when she neglects the children (%)</th>\n",
       "      <th>Women who believe a husband is justified in beating his wife when she refuses sex with him (%)</th>\n",
       "      <th>Women who were first married by age 15 (% of women ages 20-24)</th>\n",
       "      <th>Women who were first married by age 18 (% of women ages 20-24)</th>\n",
       "      <th>Women's share of population ages 15+ living with HIV (%)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Arab World</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>37.165211</td>\n",
       "      <td>25.635403</td>\n",
       "      <td>48.328518</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Caribbean small states</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Central Europe and the Baltics</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Early-demographic dividend</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>48.378037</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>East Asia &amp; Pacific</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>73.693977</td>\n",
       "      <td>71.484467</td>\n",
       "      <td>75.922256</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 1600 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                2005 PPP conversion factor, GDP (LCU per international $)  \\\n",
       "Arab World                                                                    0.0           \n",
       "Caribbean small states                                                        0.0           \n",
       "Central Europe and the Baltics                                                0.0           \n",
       "Early-demographic dividend                                                    0.0           \n",
       "East Asia & Pacific                                                           0.0           \n",
       "\n",
       "                                2005 PPP conversion factor, private consumption (LCU per international $)  \\\n",
       "Arab World                                                                    0.0                           \n",
       "Caribbean small states                                                        0.0                           \n",
       "Central Europe and the Baltics                                                0.0                           \n",
       "Early-demographic dividend                                                    0.0                           \n",
       "East Asia & Pacific                                                           0.0                           \n",
       "\n",
       "                                Access to clean fuels and technologies for cooking  (% of population)  \\\n",
       "Arab World                                                                    0.0                       \n",
       "Caribbean small states                                                        0.0                       \n",
       "Central Europe and the Baltics                                                0.0                       \n",
       "Early-demographic dividend                                                    0.0                       \n",
       "East Asia & Pacific                                                           0.0                       \n",
       "\n",
       "                                Access to electricity (% of population)  \\\n",
       "Arab World                                                          0.0   \n",
       "Caribbean small states                                              0.0   \n",
       "Central Europe and the Baltics                                      0.0   \n",
       "Early-demographic dividend                                          0.0   \n",
       "East Asia & Pacific                                                 0.0   \n",
       "\n",
       "                                Access to electricity, rural (% of rural population)  \\\n",
       "Arab World                                                                    0.0      \n",
       "Caribbean small states                                                        0.0      \n",
       "Central Europe and the Baltics                                                0.0      \n",
       "Early-demographic dividend                                                    0.0      \n",
       "East Asia & Pacific                                                           0.0      \n",
       "\n",
       "                                Access to electricity, urban (% of urban population)  \\\n",
       "Arab World                                                                    0.0      \n",
       "Caribbean small states                                                        0.0      \n",
       "Central Europe and the Baltics                                                0.0      \n",
       "Early-demographic dividend                                                    0.0      \n",
       "East Asia & Pacific                                                           0.0      \n",
       "\n",
       "                                Account ownership at a financial institution or with a mobile-money-service provider (% of population ages 15+)  \\\n",
       "Arab World                                                                    0.0                                                                 \n",
       "Caribbean small states                                                        0.0                                                                 \n",
       "Central Europe and the Baltics                                                0.0                                                                 \n",
       "Early-demographic dividend                                                    0.0                                                                 \n",
       "East Asia & Pacific                                                           0.0                                                                 \n",
       "\n",
       "                                Account ownership at a financial institution or with a mobile-money-service provider, female (% of population ages 15+)  \\\n",
       "Arab World                                                              37.165211                                                                         \n",
       "Caribbean small states                                                   0.000000                                                                         \n",
       "Central Europe and the Baltics                                           0.000000                                                                         \n",
       "Early-demographic dividend                                               0.000000                                                                         \n",
       "East Asia & Pacific                                                     73.693977                                                                         \n",
       "\n",
       "                                Account ownership at a financial institution or with a mobile-money-service provider, male (% of population ages 15+)  \\\n",
       "Arab World                                                              25.635403                                                                       \n",
       "Caribbean small states                                                   0.000000                                                                       \n",
       "Central Europe and the Baltics                                           0.000000                                                                       \n",
       "Early-demographic dividend                                               0.000000                                                                       \n",
       "East Asia & Pacific                                                     71.484467                                                                       \n",
       "\n",
       "                                Account ownership at a financial institution or with a mobile-money-service provider, older adults (% of population ages 25+)  \\\n",
       "Arab World                                                              48.328518                                                                               \n",
       "Caribbean small states                                                   0.000000                                                                               \n",
       "Central Europe and the Baltics                                           0.000000                                                                               \n",
       "Early-demographic dividend                                               0.000000                                                                               \n",
       "East Asia & Pacific                                                     75.922256                                                                               \n",
       "\n",
       "                                                          ...                             \\\n",
       "Arab World                                                ...                              \n",
       "Caribbean small states                                    ...                              \n",
       "Central Europe and the Baltics                            ...                              \n",
       "Early-demographic dividend                                ...                              \n",
       "East Asia & Pacific                                       ...                              \n",
       "\n",
       "                                Women participating in the three decisions (own health care, major household purchases, and visiting family) (% of women age 15-49)  \\\n",
       "Arab World                                                                    0.0                                                                                     \n",
       "Caribbean small states                                                        0.0                                                                                     \n",
       "Central Europe and the Baltics                                                0.0                                                                                     \n",
       "Early-demographic dividend                                                    0.0                                                                                     \n",
       "East Asia & Pacific                                                           0.0                                                                                     \n",
       "\n",
       "                                Women who believe a husband is justified in beating his wife (any of five reasons) (%)  \\\n",
       "Arab World                                                                    0.0                                        \n",
       "Caribbean small states                                                        0.0                                        \n",
       "Central Europe and the Baltics                                                0.0                                        \n",
       "Early-demographic dividend                                                    0.0                                        \n",
       "East Asia & Pacific                                                           0.0                                        \n",
       "\n",
       "                                Women who believe a husband is justified in beating his wife when she argues with him (%)  \\\n",
       "Arab World                                                                    0.0                                           \n",
       "Caribbean small states                                                        0.0                                           \n",
       "Central Europe and the Baltics                                                0.0                                           \n",
       "Early-demographic dividend                                                    0.0                                           \n",
       "East Asia & Pacific                                                           0.0                                           \n",
       "\n",
       "                                Women who believe a husband is justified in beating his wife when she burns the food (%)  \\\n",
       "Arab World                                                                    0.0                                          \n",
       "Caribbean small states                                                        0.0                                          \n",
       "Central Europe and the Baltics                                                0.0                                          \n",
       "Early-demographic dividend                                                    0.0                                          \n",
       "East Asia & Pacific                                                           0.0                                          \n",
       "\n",
       "                                Women who believe a husband is justified in beating his wife when she goes out without telling him (%)  \\\n",
       "Arab World                                                                    0.0                                                        \n",
       "Caribbean small states                                                        0.0                                                        \n",
       "Central Europe and the Baltics                                                0.0                                                        \n",
       "Early-demographic dividend                                                    0.0                                                        \n",
       "East Asia & Pacific                                                           0.0                                                        \n",
       "\n",
       "                                Women who believe a husband is justified in beating his wife when she neglects the children (%)  \\\n",
       "Arab World                                                                    0.0                                                 \n",
       "Caribbean small states                                                        0.0                                                 \n",
       "Central Europe and the Baltics                                                0.0                                                 \n",
       "Early-demographic dividend                                                    0.0                                                 \n",
       "East Asia & Pacific                                                           0.0                                                 \n",
       "\n",
       "                                Women who believe a husband is justified in beating his wife when she refuses sex with him (%)  \\\n",
       "Arab World                                                                    0.0                                                \n",
       "Caribbean small states                                                        0.0                                                \n",
       "Central Europe and the Baltics                                                0.0                                                \n",
       "Early-demographic dividend                                                    0.0                                                \n",
       "East Asia & Pacific                                                           0.0                                                \n",
       "\n",
       "                                Women who were first married by age 15 (% of women ages 20-24)  \\\n",
       "Arab World                                                                    0.0                \n",
       "Caribbean small states                                                        0.0                \n",
       "Central Europe and the Baltics                                                0.0                \n",
       "Early-demographic dividend                                                    0.0                \n",
       "East Asia & Pacific                                                           0.0                \n",
       "\n",
       "                                Women who were first married by age 18 (% of women ages 20-24)  \\\n",
       "Arab World                                                                    0.0                \n",
       "Caribbean small states                                                        0.0                \n",
       "Central Europe and the Baltics                                                0.0                \n",
       "Early-demographic dividend                                                    0.0                \n",
       "East Asia & Pacific                                                           0.0                \n",
       "\n",
       "                                Women's share of population ages 15+ living with HIV (%)  \n",
       "Arab World                                                               0.000000         \n",
       "Caribbean small states                                                   0.000000         \n",
       "Central Europe and the Baltics                                           0.000000         \n",
       "Early-demographic dividend                                              48.378037         \n",
       "East Asia & Pacific                                                      0.000000         \n",
       "\n",
       "[5 rows x 1600 columns]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "years_data_filled[\"2017\"].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "from scipy.cluster.hierarchy import dendrogram\n",
    "\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\nOQqoK71eVvv9tJvN547t9drQMLy+fWqVAZRlbW05vd5KOp3G7gd2SZ7Z32/7uMdetF2/v5okefTo\nxqn1NYlzbG7ezuLizf0vNgDMiZOMoP6eJP8myd+qqup6kn+W5AeS/M66rt9Pkrqu36+q6necvMyy\ntJvN3Lt6Na1WK91uN0me2R7fb7Vaef3Bg6nUCjAtvd5K+v3VNBqvTbuUfTWb7WmXcKh+fzXd7t1c\nuSKgAjD/Fra2to71hVVVfXuSLyT5Q3Vd/5Oqqn48yb9L8mfrur400u7X67r+1j2+/q0kbyVJXdff\ntrGxkcXFxXziE9vHP//5ZHNzM0ly48ZiFhYW8rnPDfbdPqhdkizeuJGFhYUMPve57f3FxYx2ttvX\no0fbX9du77YbHltcXMwnvvjFJMn9a9eeOzbcPujrPv/aa3u2G693r3Mcta8XbTepvr74ie1/47X7\nL3ZtplXvWfU1a/W6NtPt6yi/R9Ou94tf3P7b+dprnz/433LEdvP6vZzUOR492v7vV7v9OddGvcX2\nNWv1ujbzU69rU0Zfo/v7ZbILFy4kyUIOcZIR1C8n+XJd1/9kZ/9etp83/WpVVR/eGT39cJKv7fXF\ndV2/k+Sdnd2tbrebVquVwWA7MG9uLuyOQA4Gl9NoNNLtdvfdPqhdklweDJ7Zb7Va2dq5dWphc3Pk\nHM+3G90e3m41rPeoI6hPb9Pa3LPdeL17neOofb1ou0n1ddxrM616z6qvWavXtZluX0f5PZp2vYf9\nPXvRdvP6vZzUOcb/u+TaqLfEvmatXtdmfup1bcroa3R/v0z26quv5iiOvcxMXdedJE+qqvp9Oy99\nZ5LHSX4uyad2XvtUkp89bh8AAACcHyedxffPJvk7OzP4/kqS78126K2rqvp0kl9N8sdP2AcAAADn\nwIkCal3XX0zy7Xsc+s6TnBcAAIDz59i3+AIAAMAknfQWX/bxbqeT5fffT5I0Op3ddVBvPHqUwWCQ\nmxcv5valSwedAgAA4FwxgnpK7na7u6E02V47td1sJklW+/2s9HrTKg0AAKBIRlBPUbvZzL2rV5+b\njvn1Bw+mXBkAAEB5jKACAABQBAEVAACAIgioAAAAFEFABQAAoAgCKgAAAEUwiy/AGVtbXktvZXup\nqU6jk8FgsLvdX91enurJrSfPHRsMBrl482Jab7emUzgAwCkTUGdQ591O3l9+/+n+Hm9ix7ePe+xF\n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\nTkSuQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0xb6c7cf8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "scaler = StandardScaler()\n",
    "clf = Clustering(k=13, linkage='complete')\n",
    "labels = clf.fit_predict(scaler.fit_transform(years_data_filled[\"2017\"].values))\n",
    "\n",
    "fig = plt.figure(figsize=(16,12))\n",
    "dend = dendrogram(clf.linkage[years_data_filled[\"2017\"].shape[0]:], color_threshold=68)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " 2017 (58 from 58)\n",
      "Wall time: 8.17 s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "labels_data = {}\n",
    "clusters_data = {}\n",
    "size = len(years_data_filled)\n",
    "#k = 13\n",
    "k = 25\n",
    "for i, year in zip(range(size), years_data_filled):\n",
    "    print(\"\\r {} ({} from {})\".format(year, i + 1, size), end='')\n",
    "    scaler = StandardScaler()\n",
    "    clf = Clustering(k=k, linkage='complete')\n",
    "    labels = clf.fit_predict(scaler.fit_transform(years_data_filled[year].values))\n",
    "    \n",
    "    clust_sizes = list(sorted([(sum([label == i for label in labels]), i) for i in range(k)], reverse=True))\n",
    "    label_map = {clust_sizes[i][1] : i for i in range(k)}\n",
    "    \n",
    "    clusters_data[year] = [clust_sizes[i][0] for i in range(k)]\n",
    "    labels_data[year] = [label_map[label] for label in labels]\n",
    "print()\n",
    "labels_data = pd.DataFrame(labels_data, index=years_data_filled[\"2017\"].index)\n",
    "clusters_data = pd.DataFrame(clusters_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Arab World</th>\n",
       "      <th>Caribbean small states</th>\n",
       "      <th>Central Europe and the Baltics</th>\n",
       "      <th>Early-demographic dividend</th>\n",
       "      <th>East Asia &amp; Pacific</th>\n",
       "      <th>East Asia &amp; Pacific (excluding high income)</th>\n",
       "      <th>East Asia &amp; Pacific (IDA &amp; IBRD countries)</th>\n",
       "      <th>Euro area</th>\n",
       "      <th>Europe &amp; Central Asia</th>\n",
       "      <th>Europe &amp; Central Asia (excluding high income)</th>\n",
       "      <th>...</th>\n",
       "      <th>Uruguay</th>\n",
       "      <th>Uzbekistan</th>\n",
       "      <th>Vanuatu</th>\n",
       "      <th>Venezuela, RB</th>\n",
       "      <th>Vietnam</th>\n",
       "      <th>Virgin Islands (U.S.)</th>\n",
       "      <th>West Bank and Gaza</th>\n",
       "      <th>Yemen, Rep.</th>\n",
       "      <th>Zambia</th>\n",
       "      <th>Zimbabwe</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1960</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1962</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>9</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1963</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>10</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>9</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1964</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>11</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1965</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>24</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1966</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>12</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1967</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>9</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>24</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1968</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1969</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1970</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1971</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1972</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1973</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1974</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1975</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1976</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1977</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1978</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1979</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>24</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1980</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1981</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1982</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1983</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1984</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1985</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1986</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1987</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1988</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1989</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1990</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1991</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1992</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>24</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1993</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1994</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>10</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>24</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1995</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>24</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1996</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>24</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1997</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>11</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>24</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1998</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>24</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1999</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>23</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2000</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>24</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2001</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>24</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2002</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>24</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2003</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>24</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>24</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2005</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>11</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>24</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2006</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>9</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>13</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>23</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2007</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>9</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>23</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2008</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>24</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2009</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>11</td>\n",
       "      <td>...</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>23</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2010</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>24</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>23</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2012</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>24</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2013</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>24</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>24</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>10</td>\n",
       "      <td>7</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>10</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>24</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>23</td>\n",
       "      <td>24</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>24</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>58 rows × 264 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Arab World  Caribbean small states  Central Europe and the Baltics  \\\n",
       "1960           0                       0                               1   \n",
       "1961           0                       0                               0   \n",
       "1962           0                       0                               0   \n",
       "1963           0                       0                               4   \n",
       "1964           0                       0                               0   \n",
       "1965           0                       0                               0   \n",
       "1966           0                       0                               0   \n",
       "1967           0                       0                               0   \n",
       "1968           0                       0                               0   \n",
       "1969           0                       0                               0   \n",
       "1970           0                       0                               0   \n",
       "1971           0                       0                               0   \n",
       "1972           0                       0                               0   \n",
       "1973           0                       0                               0   \n",
       "1974           0                       0                               0   \n",
       "1975           0                       0                               0   \n",
       "1976           1                       0                               0   \n",
       "1977           0                       0                               0   \n",
       "1978           0                       0                               0   \n",
       "1979           0                       0                               2   \n",
       "1980           0                       0                               0   \n",
       "1981           2                       0                               1   \n",
       "1982           1                       1                               0   \n",
       "1983           0                       0                               0   \n",
       "1984           0                       0                               0   \n",
       "1985           0                       0                               2   \n",
       "1986           0                       0                               0   \n",
       "1987           1                       1                               1   \n",
       "1988           0                       0                               0   \n",
       "1989           0                       0                               0   \n",
       "1990           0                       0                               0   \n",
       "1991           0                       0                               0   \n",
       "1992           0                       0                               0   \n",
       "1993           0                       1                               1   \n",
       "1994           2                       0                               0   \n",
       "1995           0                       0                               0   \n",
       "1996           0                       0                               1   \n",
       "1997           0                       0                               1   \n",
       "1998           0                       0                               1   \n",
       "1999           2                       2                               3   \n",
       "2000           0                       0                               1   \n",
       "2001           0                       0                               0   \n",
       "2002           1                       1                               1   \n",
       "2003           0                       1                               1   \n",
       "2004           0                       0                               2   \n",
       "2005           0                       0                               0   \n",
       "2006           0                       0                               0   \n",
       "2007           1                       1                               3   \n",
       "2008           0                       0                               1   \n",
       "2009           0                       0                               0   \n",
       "2010           0                       0                               0   \n",
       "2011           0                       0                               0   \n",
       "2012           0                       0                               2   \n",
       "2013           0                       0                               0   \n",
       "2014           0                       0                               0   \n",
       "2015           0                       0                               1   \n",
       "2016           0                       0                               1   \n",
       "2017           0                       0                               0   \n",
       "\n",
       "      Early-demographic dividend  East Asia & Pacific  \\\n",
       "1960                           9                    3   \n",
       "1961                           7                    3   \n",
       "1962                           9                    3   \n",
       "1963                          10                    4   \n",
       "1964                          11                    4   \n",
       "1965                           9                    0   \n",
       "1966                          12                    3   \n",
       "1967                           9                    3   \n",
       "1968                           7                    0   \n",
       "1969                           8                    3   \n",
       "1970                           6                    0   \n",
       "1971                           4                    0   \n",
       "1972                           5                    0   \n",
       "1973                           4                    0   \n",
       "1974                           5                    0   \n",
       "1975                           7                    0   \n",
       "1976                           7                    1   \n",
       "1977                           7                    1   \n",
       "1978                           8                    0   \n",
       "1979                           7                    0   \n",
       "1980                           5                    0   \n",
       "1981                           6                    2   \n",
       "1982                           5                    0   \n",
       "1983                           3                    3   \n",
       "1984                           5                    0   \n",
       "1985                           2                    2   \n",
       "1986                           2                    2   \n",
       "1987                           6                    1   \n",
       "1988                           3                    3   \n",
       "1989                           0                    0   \n",
       "1990                           1                    1   \n",
       "1991                           3                    3   \n",
       "1992                           2                    2   \n",
       "1993                           2                    2   \n",
       "1994                           2                    2   \n",
       "1995                           3                    3   \n",
       "1996                           2                    2   \n",
       "1997                           4                    4   \n",
       "1998                           5                    5   \n",
       "1999                           2                    2   \n",
       "2000                           0                    0   \n",
       "2001                           0                    0   \n",
       "2002                           1                    1   \n",
       "2003                           0                    0   \n",
       "2004                           4                    4   \n",
       "2005                           3                    3   \n",
       "2006                           9                    3   \n",
       "2007                           0                    0   \n",
       "2008                           1                    1   \n",
       "2009                           4                    4   \n",
       "2010                           6                    6   \n",
       "2011                           3                    3   \n",
       "2012                           4                    4   \n",
       "2013                           5                    5   \n",
       "2014                           3                    3   \n",
       "2015                           7                    7   \n",
       "2016                           0                    4   \n",
       "2017                           2                    2   \n",
       "\n",
       "      East Asia & Pacific (excluding high income)  \\\n",
       "1960                                            3   \n",
       "1961                                            3   \n",
       "1962                                            3   \n",
       "1963                                            4   \n",
       "1964                                            4   \n",
       "1965                                            0   \n",
       "1966                                            3   \n",
       "1967                                            3   \n",
       "1968                                            0   \n",
       "1969                                            3   \n",
       "1970                                            0   \n",
       "1971                                            0   \n",
       "1972                                            0   \n",
       "1973                                            0   \n",
       "1974                                            0   \n",
       "1975                                            0   \n",
       "1976                                            1   \n",
       "1977                                            1   \n",
       "1978                                            0   \n",
       "1979                                            0   \n",
       "1980                                            0   \n",
       "1981                                            1   \n",
       "1982                                            0   \n",
       "1983                                            0   \n",
       "1984                                            0   \n",
       "1985                                            2   \n",
       "1986                                            9   \n",
       "1987                                            1   \n",
       "1988                                            0   \n",
       "1989                                            0   \n",
       "1990                                            2   \n",
       "1991                                            7   \n",
       "1992                                            2   \n",
       "1993                                            2   \n",
       "1994                                           10   \n",
       "1995                                            8   \n",
       "1996                                            9   \n",
       "1997                                           11   \n",
       "1998                                            6   \n",
       "1999                                            9   \n",
       "2000                                            9   \n",
       "2001                                           11   \n",
       "2002                                            7   \n",
       "2003                                            4   \n",
       "2004                                            4   \n",
       "2005                                            3   \n",
       "2006                                            3   \n",
       "2007                                            0   \n",
       "2008                                            1   \n",
       "2009                                            4   \n",
       "2010                                            6   \n",
       "2011                                            3   \n",
       "2012                                            4   \n",
       "2013                                            5   \n",
       "2014                                            3   \n",
       "2015                                           10   \n",
       "2016                                            4   \n",
       "2017                                            2   \n",
       "\n",
       "      East Asia & Pacific (IDA & IBRD countries)  Euro area  \\\n",
       "1960                                           3          7   \n",
       "1961                                           3          6   \n",
       "1962                                           3          2   \n",
       "1963                                           4          9   \n",
       "1964                                           4          9   \n",
       "1965                                           0          8   \n",
       "1966                                           3          8   \n",
       "1967                                           3          6   \n",
       "1968                                           0          5   \n",
       "1969                                           3          6   \n",
       "1970                                           0          1   \n",
       "1971                                           0          0   \n",
       "1972                                           0          0   \n",
       "1973                                           0          1   \n",
       "1974                                           0          0   \n",
       "1975                                           0          6   \n",
       "1976                                           1          5   \n",
       "1977                                           1          5   \n",
       "1978                                           0          6   \n",
       "1979                                           0          5   \n",
       "1980                                           0          3   \n",
       "1981                                           1          3   \n",
       "1982                                           0          3   \n",
       "1983                                           3          4   \n",
       "1984                                           0          0   \n",
       "1985                                           2          5   \n",
       "1986                                           2          4   \n",
       "1987                                           1          2   \n",
       "1988                                           3          2   \n",
       "1989                                           0          1   \n",
       "1990                                           1          5   \n",
       "1991                                           3          3   \n",
       "1992                                           2          5   \n",
       "1993                                           2          5   \n",
       "1994                                           2          1   \n",
       "1995                                           3          3   \n",
       "1996                                           2          2   \n",
       "1997                                           4          5   \n",
       "1998                                           5          4   \n",
       "1999                                           2          1   \n",
       "2000                                           0          1   \n",
       "2001                                           0          2   \n",
       "2002                                           1          2   \n",
       "2003                                           0          3   \n",
       "2004                                           4          4   \n",
       "2005                                           3          4   \n",
       "2006                                           3          3   \n",
       "2007                                           0          4   \n",
       "2008                                           1          1   \n",
       "2009                                           4          6   \n",
       "2010                                           6          7   \n",
       "2011                                           3          5   \n",
       "2012                                           4          4   \n",
       "2013                                           5          7   \n",
       "2014                                           3          6   \n",
       "2015                                           7          6   \n",
       "2016                                           4          1   \n",
       "2017                                           2          3   \n",
       "\n",
       "      Europe & Central Asia  Europe & Central Asia (excluding high income)  \\\n",
       "1960                      3                                              1   \n",
       "1961                      3                                              0   \n",
       "1962                      2                                              0   \n",
       "1963                      4                                              4   \n",
       "1964                      9                                              0   \n",
       "1965                      8                                              0   \n",
       "1966                      8                                              0   \n",
       "1967                      6                                              0   \n",
       "1968                      5                                              0   \n",
       "1969                      6                                              0   \n",
       "1970                      1                                              0   \n",
       "1971                      0                                              0   \n",
       "1972                      0                                              0   \n",
       "1973                      1                                              0   \n",
       "1974                      0                                              0   \n",
       "1975                      6                                              0   \n",
       "1976                      5                                              0   \n",
       "1977                      5                                              0   \n",
       "1978                      6                                              0   \n",
       "1979                      5                                              0   \n",
       "1980                      3                                              0   \n",
       "1981                      3                                              0   \n",
       "1982                      3                                              0   \n",
       "1983                      4                                              0   \n",
       "1984                      0                                              0   \n",
       "1985                      5                                              2   \n",
       "1986                      4                                              0   \n",
       "1987                      2                                              1   \n",
       "1988                      2                                              0   \n",
       "1989                      1                                              0   \n",
       "1990                      5                                              2   \n",
       "1991                      3                                              0   \n",
       "1992                      5                                              4   \n",
       "1993                      5                                              1   \n",
       "1994                      1                                              1   \n",
       "1995                      3                                              0   \n",
       "1996                      2                                              1   \n",
       "1997                      5                                              2   \n",
       "1998                      4                                              1   \n",
       "1999                      1                                              1   \n",
       "2000                      1                                              0   \n",
       "2001                      2                                              0   \n",
       "2002                      2                                              3   \n",
       "2003                      3                                              6   \n",
       "2004                      4                                              5   \n",
       "2005                      4                                             11   \n",
       "2006                      3                                             13   \n",
       "2007                      4                                              9   \n",
       "2008                      1                                             10   \n",
       "2009                      6                                             11   \n",
       "2010                      7                                              6   \n",
       "2011                      5                                              3   \n",
       "2012                      4                                              4   \n",
       "2013                      7                                              5   \n",
       "2014                      6                                              3   \n",
       "2015                      6                                             10   \n",
       "2016                      1                                              4   \n",
       "2017                      3                                              2   \n",
       "\n",
       "        ...     Uruguay  Uzbekistan  Vanuatu  Venezuela, RB  Vietnam  \\\n",
       "1960    ...           1           0        0              0        0   \n",
       "1961    ...           0           0        0              0        0   \n",
       "1962    ...           0           0        0              0        0   \n",
       "1963    ...           1           0        0              1        0   \n",
       "1964    ...           5           0        0              0        0   \n",
       "1965    ...          24           0        0              0        0   \n",
       "1966    ...           0           0        0              0        0   \n",
       "1967    ...          24           0        0              0        0   \n",
       "1968    ...           0           0        0              0        0   \n",
       "1969    ...           0           0        0              0        0   \n",
       "1970    ...           1           0        0              7        0   \n",
       "1971    ...           0           0        0              2        0   \n",
       "1972    ...           0           0        0              3        0   \n",
       "1973    ...           0           0        0              1        0   \n",
       "1974    ...           0           0        0              0        0   \n",
       "1975    ...           0           0        0              0        0   \n",
       "1976    ...           2           0        0              1        0   \n",
       "1977    ...           1           0        0              0        0   \n",
       "1978    ...           4           0        0              1        0   \n",
       "1979    ...           2           0        0              1       24   \n",
       "1980    ...           1           0        0              0        0   \n",
       "1981    ...           4           0        0              4        0   \n",
       "1982    ...           0           0        0              0        0   \n",
       "1983    ...           0           0        0              0        0   \n",
       "1984    ...           0           0        0              0        0   \n",
       "1985    ...           1           0        0              0        0   \n",
       "1986    ...           0           0        0              0        0   \n",
       "1987    ...           3           0        0              0        0   \n",
       "1988    ...           0           0        0              0        0   \n",
       "1989    ...           0           0        0              0        0   \n",
       "1990    ...           0           0        0              0        0   \n",
       "1991    ...           0           0        0              0        0   \n",
       "1992    ...           0           0        0              0       24   \n",
       "1993    ...           1           1        0              0        4   \n",
       "1994    ...           0           0        0              0       24   \n",
       "1995    ...           0           0        0              0       24   \n",
       "1996    ...           1           1        0              0       24   \n",
       "1997    ...           1           1        0              0       24   \n",
       "1998    ...           2           0        0              2       24   \n",
       "1999    ...           1           0        0              1       23   \n",
       "2000    ...           1           0        0              0       24   \n",
       "2001    ...           0           0        0              0       24   \n",
       "2002    ...           1           0        0              1       24   \n",
       "2003    ...           1           0        0              2       24   \n",
       "2004    ...           2           0        0              0       24   \n",
       "2005    ...           0           0        1              0       24   \n",
       "2006    ...           3           0        0              7       23   \n",
       "2007    ...           1           0        0              0       23   \n",
       "2008    ...           1           3        0              1       24   \n",
       "2009    ...           9           0        1              0       23   \n",
       "2010    ...           3           0        0              0       24   \n",
       "2011    ...           1           2        2              1       23   \n",
       "2012    ...           3           0        0              0       24   \n",
       "2013    ...           0           0        2              9       24   \n",
       "2014    ...           0           0        1              4       24   \n",
       "2015    ...           3           2        0              3       24   \n",
       "2016    ...           2           0        2             23       24   \n",
       "2017    ...           0           4        0              0       24   \n",
       "\n",
       "      Virgin Islands (U.S.)  West Bank and Gaza  Yemen, Rep.  Zambia  Zimbabwe  \n",
       "1960                      0                   2            0       0         0  \n",
       "1961                      0                   1            0       0         0  \n",
       "1962                      0                   1            0       0         0  \n",
       "1963                      0                   2            0       0         0  \n",
       "1964                      0                   1            0       2         2  \n",
       "1965                      0                   2            0       0         0  \n",
       "1966                      0                   1            0       0         0  \n",
       "1967                      0                   1            0       0         0  \n",
       "1968                      0                   1            0       0         0  \n",
       "1969                      0                   1            0       0         0  \n",
       "1970                      0                   0            0       0         0  \n",
       "1971                      0                   0            0       0         0  \n",
       "1972                      0                   0            0       0         0  \n",
       "1973                      0                   0            0       0         0  \n",
       "1974                      0                   0            0       0         0  \n",
       "1975                      0                   1            0       0         0  \n",
       "1976                      0                   0            0       1         0  \n",
       "1977                      0                   0            0       0         0  \n",
       "1978                      0                   0            1       1         1  \n",
       "1979                      0                   0            0       1         0  \n",
       "1980                      0                   0            0       0         0  \n",
       "1981                      0                   0            0       0         0  \n",
       "1982                      0                   0            0       0         0  \n",
       "1983                      0                   1            0       0         0  \n",
       "1984                      0                   1            0       0         0  \n",
       "1985                      0                   0            0       0         0  \n",
       "1986                      0                   0            0       0         0  \n",
       "1987                      0                   0            0       0         0  \n",
       "1988                      0                   1            0       1         4  \n",
       "1989                      0                   0            0       0         0  \n",
       "1990                      0                   0            0       0         0  \n",
       "1991                      0                   0            4       2         0  \n",
       "1992                      0                   0            0       1         0  \n",
       "1993                      1                   0            0       0         0  \n",
       "1994                      0                   0            0       0         5  \n",
       "1995                      0                   0            0       0         0  \n",
       "1996                      1                   0            0       0         0  \n",
       "1997                      1                   1            3       0         0  \n",
       "1998                      0                   0            0       0         0  \n",
       "1999                      0                   1            0       2        24  \n",
       "2000                      0                   0            0       0         0  \n",
       "2001                      0                   0            0       1         1  \n",
       "2002                      0                   1            0       9         1  \n",
       "2003                      0                   1            0       0         0  \n",
       "2004                      0                   2            0       0         0  \n",
       "2005                      0                   0            0       1         1  \n",
       "2006                      0                   0            0       0        24  \n",
       "2007                      0                   0            1       7        24  \n",
       "2008                      1                   1            0       5         0  \n",
       "2009                      2                   0            1       1        24  \n",
       "2010                      2                   0            8       0         0  \n",
       "2011                      0                   1            2       0        24  \n",
       "2012                      0                   0            1       1         1  \n",
       "2013                      0                   0            8       3         0  \n",
       "2014                      0                   4            1       1         1  \n",
       "2015                      0                   0            0       2         4  \n",
       "2016                      0                   2            5       0         0  \n",
       "2017                      0                   0            0       0         0  \n",
       "\n",
       "[58 rows x 264 columns]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "labels_data.T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>...</th>\n",
       "      <th>15</th>\n",
       "      <th>16</th>\n",
       "      <th>17</th>\n",
       "      <th>18</th>\n",
       "      <th>19</th>\n",
       "      <th>20</th>\n",
       "      <th>21</th>\n",
       "      <th>22</th>\n",
       "      <th>23</th>\n",
       "      <th>24</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1960</th>\n",
       "      <td>162</td>\n",
       "      <td>40</td>\n",
       "      <td>26</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961</th>\n",
       "      <td>188</td>\n",
       "      <td>26</td>\n",
       "      <td>14</td>\n",
       "      <td>9</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1962</th>\n",
       "      <td>181</td>\n",
       "      <td>26</td>\n",
       "      <td>14</td>\n",
       "      <td>9</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1963</th>\n",
       "      <td>123</td>\n",
       "      <td>53</td>\n",
       "      <td>26</td>\n",
       "      <td>16</td>\n",
       "      <td>15</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1964</th>\n",
       "      <td>159</td>\n",
       "      <td>26</td>\n",
       "      <td>20</td>\n",
       "      <td>19</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1965</th>\n",
       "      <td>146</td>\n",
       "      <td>34</td>\n",
       "      <td>26</td>\n",
       "      <td>21</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1966</th>\n",
       "      <td>174</td>\n",
       "      <td>26</td>\n",
       "      <td>16</td>\n",
       "      <td>12</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1967</th>\n",
       "      <td>181</td>\n",
       "      <td>26</td>\n",
       "      <td>17</td>\n",
       "      <td>9</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1968</th>\n",
       "      <td>189</td>\n",
       "      <td>26</td>\n",
       "      <td>19</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1969</th>\n",
       "      <td>182</td>\n",
       "      <td>26</td>\n",
       "      <td>19</td>\n",
       "      <td>8</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1970</th>\n",
       "      <td>197</td>\n",
       "      <td>21</td>\n",
       "      <td>9</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1971</th>\n",
       "      <td>220</td>\n",
       "      <td>8</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1972</th>\n",
       "      <td>222</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1973</th>\n",
       "      <td>207</td>\n",
       "      <td>22</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1974</th>\n",
       "      <td>219</td>\n",
       "      <td>7</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1975</th>\n",
       "      <td>182</td>\n",
       "      <td>33</td>\n",
       "      <td>9</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1976</th>\n",
       "      <td>124</td>\n",
       "      <td>78</td>\n",
       "      <td>21</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1977</th>\n",
       "      <td>194</td>\n",
       "      <td>17</td>\n",
       "      <td>10</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1978</th>\n",
       "      <td>133</td>\n",
       "      <td>63</td>\n",
       "      <td>16</td>\n",
       "      <td>10</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1979</th>\n",
       "      <td>150</td>\n",
       "      <td>47</td>\n",
       "      <td>15</td>\n",
       "      <td>13</td>\n",
       "      <td>7</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1980</th>\n",
       "      <td>200</td>\n",
       "      <td>20</td>\n",
       "      <td>10</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1981</th>\n",
       "      <td>154</td>\n",
       "      <td>38</td>\n",
       "      <td>20</td>\n",
       "      <td>18</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1982</th>\n",
       "      <td>188</td>\n",
       "      <td>34</td>\n",
       "      <td>8</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1983</th>\n",
       "      <td>171</td>\n",
       "      <td>29</td>\n",
       "      <td>18</td>\n",
       "      <td>17</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1984</th>\n",
       "      <td>169</td>\n",
       "      <td>27</td>\n",
       "      <td>20</td>\n",
       "      <td>18</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1985</th>\n",
       "      <td>160</td>\n",
       "      <td>37</td>\n",
       "      <td>19</td>\n",
       "      <td>13</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1986</th>\n",
       "      <td>192</td>\n",
       "      <td>17</td>\n",
       "      <td>14</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1987</th>\n",
       "      <td>166</td>\n",
       "      <td>25</td>\n",
       "      <td>22</td>\n",
       "      <td>19</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1988</th>\n",
       "      <td>125</td>\n",
       "      <td>66</td>\n",
       "      <td>24</td>\n",
       "      <td>13</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1989</th>\n",
       "      <td>201</td>\n",
       "      <td>25</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1990</th>\n",
       "      <td>199</td>\n",
       "      <td>12</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1991</th>\n",
       "      <td>185</td>\n",
       "      <td>20</td>\n",
       "      <td>17</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1992</th>\n",
       "      <td>163</td>\n",
       "      <td>26</td>\n",
       "      <td>17</td>\n",
       "      <td>15</td>\n",
       "      <td>10</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1993</th>\n",
       "      <td>134</td>\n",
       "      <td>60</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1994</th>\n",
       "      <td>174</td>\n",
       "      <td>28</td>\n",
       "      <td>23</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1995</th>\n",
       "      <td>195</td>\n",
       "      <td>20</td>\n",
       "      <td>11</td>\n",
       "      <td>8</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1996</th>\n",
       "      <td>108</td>\n",
       "      <td>90</td>\n",
       "      <td>27</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1997</th>\n",
       "      <td>119</td>\n",
       "      <td>65</td>\n",
       "      <td>35</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1998</th>\n",
       "      <td>152</td>\n",
       "      <td>41</td>\n",
       "      <td>22</td>\n",
       "      <td>10</td>\n",
       "      <td>7</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1999</th>\n",
       "      <td>83</td>\n",
       "      <td>77</td>\n",
       "      <td>36</td>\n",
       "      <td>33</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2000</th>\n",
       "      <td>151</td>\n",
       "      <td>50</td>\n",
       "      <td>24</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2001</th>\n",
       "      <td>126</td>\n",
       "      <td>65</td>\n",
       "      <td>31</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2002</th>\n",
       "      <td>112</td>\n",
       "      <td>80</td>\n",
       "      <td>37</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2003</th>\n",
       "      <td>123</td>\n",
       "      <td>87</td>\n",
       "      <td>10</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004</th>\n",
       "      <td>161</td>\n",
       "      <td>32</td>\n",
       "      <td>18</td>\n",
       "      <td>12</td>\n",
       "      <td>10</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2005</th>\n",
       "      <td>111</td>\n",
       "      <td>54</td>\n",
       "      <td>39</td>\n",
       "      <td>18</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2006</th>\n",
       "      <td>119</td>\n",
       "      <td>36</td>\n",
       "      <td>24</td>\n",
       "      <td>21</td>\n",
       "      <td>15</td>\n",
       "      <td>12</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2007</th>\n",
       "      <td>76</td>\n",
       "      <td>74</td>\n",
       "      <td>39</td>\n",
       "      <td>33</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2008</th>\n",
       "      <td>129</td>\n",
       "      <td>79</td>\n",
       "      <td>13</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2009</th>\n",
       "      <td>90</td>\n",
       "      <td>48</td>\n",
       "      <td>38</td>\n",
       "      <td>26</td>\n",
       "      <td>13</td>\n",
       "      <td>9</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2010</th>\n",
       "      <td>109</td>\n",
       "      <td>40</td>\n",
       "      <td>31</td>\n",
       "      <td>24</td>\n",
       "      <td>12</td>\n",
       "      <td>9</td>\n",
       "      <td>8</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011</th>\n",
       "      <td>85</td>\n",
       "      <td>64</td>\n",
       "      <td>44</td>\n",
       "      <td>16</td>\n",
       "      <td>10</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2012</th>\n",
       "      <td>92</td>\n",
       "      <td>58</td>\n",
       "      <td>44</td>\n",
       "      <td>19</td>\n",
       "      <td>11</td>\n",
       "      <td>9</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2013</th>\n",
       "      <td>82</td>\n",
       "      <td>52</td>\n",
       "      <td>45</td>\n",
       "      <td>18</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>8</td>\n",
       "      <td>7</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014</th>\n",
       "      <td>85</td>\n",
       "      <td>51</td>\n",
       "      <td>45</td>\n",
       "      <td>19</td>\n",
       "      <td>15</td>\n",
       "      <td>9</td>\n",
       "      <td>7</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015</th>\n",
       "      <td>81</td>\n",
       "      <td>44</td>\n",
       "      <td>38</td>\n",
       "      <td>34</td>\n",
       "      <td>13</td>\n",
       "      <td>11</td>\n",
       "      <td>7</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016</th>\n",
       "      <td>137</td>\n",
       "      <td>47</td>\n",
       "      <td>36</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017</th>\n",
       "      <td>149</td>\n",
       "      <td>66</td>\n",
       "      <td>9</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>58 rows × 25 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       0   1   2   3   4   5   6   7   8   9  ...  15  16  17  18  19  20  21  \\\n",
       "1960  162  40  26   6   4   3   3   2   2   1 ...   1   1   1   1   1   1   1   \n",
       "1961  188  26  14   9   4   3   2   1   1   1 ...   1   1   1   1   1   1   1   \n",
       "1962  181  26  14   9   7   4   3   2   2   1 ...   1   1   1   1   1   1   1   \n",
       "1963  123  53  26  16  15   5   3   3   3   2 ...   1   1   1   1   1   1   1   \n",
       "1964  159  26  20  19   6   5   4   3   3   3 ...   1   1   1   1   1   1   1   \n",
       "1965  146  34  26  21   7   4   4   3   3   1 ...   1   1   1   1   1   1   1   \n",
       "1966  174  26  16  12   4   4   3   3   3   2 ...   1   1   1   1   1   1   1   \n",
       "1967  181  26  17   9   4   3   3   3   2   1 ...   1   1   1   1   1   1   1   \n",
       "1968  189  26  19   4   3   3   2   1   1   1 ...   1   1   1   1   1   1   1   \n",
       "1969  182  26  19   8   4   3   3   2   1   1 ...   1   1   1   1   1   1   1   \n",
       "1970  197  21   9   4   3   3   3   3   2   2 ...   1   1   1   1   1   1   1   \n",
       "1971  220   8   5   3   3   2   2   2   2   2 ...   1   1   1   1   1   1   1   \n",
       "1972  222   6   4   4   3   3   2   2   2   1 ...   1   1   1   1   1   1   1   \n",
       "1973  207  22   5   3   3   3   2   2   1   1 ...   1   1   1   1   1   1   1   \n",
       "1974  219   7   6   4   3   3   2   2   2   1 ...   1   1   1   1   1   1   1   \n",
       "1975  182  33   9   7   5   3   3   3   2   2 ...   1   1   1   1   1   1   1   \n",
       "1976  124  78  21   6   4   4   3   3   2   2 ...   1   1   1   1   1   1   1   \n",
       "1977  194  17  10   6   5   4   3   3   2   2 ...   1   1   1   1   1   1   1   \n",
       "1978  133  63  16  10   8   6   4   3   3   2 ...   1   1   1   1   1   1   1   \n",
       "1979  150  47  15  13   7   6   4   3   2   2 ...   1   1   1   1   1   1   1   \n",
       "1980  200  20  10   4   3   3   3   2   2   2 ...   1   1   1   1   1   1   1   \n",
       "1981  154  38  20  18   5   3   3   2   2   2 ...   1   1   1   1   1   1   1   \n",
       "1982  188  34   8   4   3   3   3   2   2   2 ...   1   1   1   1   1   1   1   \n",
       "1983  171  29  18  17   4   3   2   2   2   1 ...   1   1   1   1   1   1   1   \n",
       "1984  169  27  20  18   3   3   3   2   2   2 ...   1   1   1   1   1   1   1   \n",
       "1985  160  37  19  13   6   4   3   2   2   2 ...   1   1   1   1   1   1   1   \n",
       "1986  192  17  14   6   4   3   3   3   2   2 ...   1   1   1   1   1   1   1   \n",
       "1987  166  25  22  19   5   3   3   2   2   2 ...   1   1   1   1   1   1   1   \n",
       "1988  125  66  24  13   6   5   3   2   2   2 ...   1   1   1   1   1   1   1   \n",
       "1989  201  25   5   3   3   3   2   2   2   2 ...   1   1   1   1   1   1   1   \n",
       "1990  199  12   8   6   6   4   4   3   2   2 ...   1   1   1   1   1   1   1   \n",
       "1991  185  20  17   8   6   3   3   2   2   2 ...   1   1   1   1   1   1   1   \n",
       "1992  163  26  17  15  10   7   4   2   2   2 ...   1   1   1   1   1   1   1   \n",
       "1993  134  60  16  16   7   4   3   3   2   2 ...   1   1   1   1   1   1   1   \n",
       "1994  174  28  23   8   3   3   3   2   2   2 ...   1   1   1   1   1   1   1   \n",
       "1995  195  20  11   8   4   3   3   2   2   1 ...   1   1   1   1   1   1   1   \n",
       "1996  108  90  27   7   4   3   3   2   2   2 ...   1   1   1   1   1   1   1   \n",
       "1997  119  65  35   6   6   4   4   3   3   2 ...   1   1   1   1   1   1   1   \n",
       "1998  152  41  22  10   7   6   5   2   2   2 ...   1   1   1   1   1   1   1   \n",
       "1999   83  77  36  33   3   3   3   3   2   2 ...   1   1   1   1   1   1   1   \n",
       "2000  151  50  24   7   5   3   3   2   2   2 ...   1   1   1   1   1   1   1   \n",
       "2001  126  65  31   5   5   4   4   3   2   2 ...   1   1   1   1   1   1   1   \n",
       "2002  112  80  37   4   3   3   2   2   2   2 ...   1   1   1   1   1   1   1   \n",
       "2003  123  87  10   7   5   5   3   3   2   2 ...   1   1   1   1   1   1   1   \n",
       "2004  161  32  18  12  10   5   4   3   2   2 ...   1   1   1   1   1   1   1   \n",
       "2005  111  54  39  18   7   4   4   3   3   2 ...   1   1   1   1   1   1   1   \n",
       "2006  119  36  24  21  15  12   6   4   3   3 ...   1   1   1   1   1   1   1   \n",
       "2007   76  74  39  33   7   7   4   4   2   2 ...   1   1   1   1   1   1   1   \n",
       "2008  129  79  13   7   4   4   4   3   2   2 ...   1   1   1   1   1   1   1   \n",
       "2009   90  48  38  26  13   9   7   7   4   3 ...   1   1   1   1   1   1   1   \n",
       "2010  109  40  31  24  12   9   8   7   5   2 ...   1   1   1   1   1   1   1   \n",
       "2011   85  64  44  16  10   7   7   6   4   2 ...   1   1   1   1   1   1   1   \n",
       "2012   92  58  44  19  11   9   4   3   3   3 ...   1   1   1   1   1   1   1   \n",
       "2013   82  52  45  18  10  10   8   7   6   6 ...   1   1   1   1   1   1   1   \n",
       "2014   85  51  45  19  15   9   7   6   6   4 ...   1   1   1   1   1   1   1   \n",
       "2015   81  44  38  34  13  11   7   6   6   5 ...   1   1   1   1   1   1   1   \n",
       "2016  137  47  36   6   6   6   3   3   2   2 ...   1   1   1   1   1   1   1   \n",
       "2017  149  66   9   6   4   3   3   2   2   2 ...   1   1   1   1   1   1   1   \n",
       "\n",
       "      22  23  24  \n",
       "1960   1   1   1  \n",
       "1961   1   1   1  \n",
       "1962   1   1   1  \n",
       "1963   1   1   1  \n",
       "1964   1   1   1  \n",
       "1965   1   1   1  \n",
       "1966   1   1   1  \n",
       "1967   1   1   1  \n",
       "1968   1   1   1  \n",
       "1969   1   1   1  \n",
       "1970   1   1   1  \n",
       "1971   1   1   1  \n",
       "1972   1   1   1  \n",
       "1973   1   1   1  \n",
       "1974   1   1   1  \n",
       "1975   1   1   1  \n",
       "1976   1   1   1  \n",
       "1977   1   1   1  \n",
       "1978   1   1   1  \n",
       "1979   1   1   1  \n",
       "1980   1   1   1  \n",
       "1981   1   1   1  \n",
       "1982   1   1   1  \n",
       "1983   1   1   1  \n",
       "1984   1   1   1  \n",
       "1985   1   1   1  \n",
       "1986   1   1   1  \n",
       "1987   1   1   1  \n",
       "1988   1   1   1  \n",
       "1989   1   1   1  \n",
       "1990   1   1   1  \n",
       "1991   1   1   1  \n",
       "1992   1   1   1  \n",
       "1993   1   1   1  \n",
       "1994   1   1   1  \n",
       "1995   1   1   1  \n",
       "1996   1   1   1  \n",
       "1997   1   1   1  \n",
       "1998   1   1   1  \n",
       "1999   1   1   1  \n",
       "2000   1   1   1  \n",
       "2001   1   1   1  \n",
       "2002   1   1   1  \n",
       "2003   1   1   1  \n",
       "2004   1   1   1  \n",
       "2005   1   1   1  \n",
       "2006   1   1   1  \n",
       "2007   1   1   1  \n",
       "2008   1   1   1  \n",
       "2009   1   1   1  \n",
       "2010   1   1   1  \n",
       "2011   1   1   1  \n",
       "2012   1   1   1  \n",
       "2013   1   1   1  \n",
       "2014   1   1   1  \n",
       "2015   1   1   1  \n",
       "2016   1   1   1  \n",
       "2017   1   1   1  \n",
       "\n",
       "[58 rows x 25 columns]"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "clusters_data.T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['Arab World', 'Caribbean small states', 'Europe & Central Asia (IDA & IBRD countries)', 'Fragile and conflict affected situations', 'IDA blend', 'Latin America & Caribbean', 'Latin America & the Caribbean (IDA & IBRD countries)', 'Middle East & North Africa', 'Middle East & North Africa (excluding high income)', 'Middle East & North Africa (IDA & IBRD countries)', 'Not classified', 'Other small states', 'Pacific island small states', 'Small states', 'Afghanistan', 'Albania', 'Algeria', 'American Samoa', 'Andorra', 'Angola', 'Antigua and Barbuda', 'Armenia', 'Aruba', 'Azerbaijan', 'Bahamas, The', 'Bahrain', 'Barbados', 'Belize', 'Benin', 'Bermuda', 'Bhutan', 'Bolivia', 'Bosnia and Herzegovina', 'Botswana', 'British Virgin Islands', 'Brunei Darussalam', 'Burkina Faso', 'Burundi', 'Cabo Verde', 'Cayman Islands', 'Central African Republic', 'Channel Islands', 'Chile', 'Colombia', 'Comoros', 'Congo, Dem. Rep.', 'Congo, Rep.', 'Costa Rica', \"Cote d'Ivoire\", 'Cuba', 'Curacao', 'Djibouti', 'Dominica', 'Dominican Republic', 'Egypt, Arab Rep.', 'El Salvador', 'Equatorial Guinea', 'Eritrea', 'Eswatini', 'Ethiopia', 'Faroe Islands', 'Fiji', 'French Polynesia', 'Gabon', 'Gambia, The', 'Georgia', 'Ghana', 'Gibraltar', 'Greenland', 'Grenada', 'Guam', 'Guatemala', 'Guinea', 'Guinea-Bissau', 'Guyana', 'Haiti', 'Iraq', 'Isle of Man', 'Jamaica', 'Jordan', 'Kazakhstan', 'Kenya', 'Kiribati', 'Korea, Dem. People’s Rep.', 'Kosovo', 'Kuwait', 'Kyrgyz Republic', 'Lao PDR', 'Libya', 'Liechtenstein', 'Macao SAR, China', 'Macedonia, FYR', 'Malaysia', 'Maldives', 'Mali', 'Marshall Islands', 'Mauritania', 'Micronesia, Fed. Sts.', 'Moldova', 'Monaco', 'Mongolia', 'Montenegro', 'Mozambique', 'Myanmar', 'Namibia', 'Nauru', 'Nepal', 'New Caledonia', 'Nicaragua', 'Niger', 'Nigeria', 'Northern Mariana Islands', 'Oman', 'Pakistan', 'Palau', 'Panama', 'Papua New Guinea', 'Paraguay', 'Philippines', 'Puerto Rico', 'Rwanda', 'Samoa', 'San Marino', 'Sao Tome and Principe', 'Saudi Arabia', 'Senegal', 'Serbia', 'Seychelles', 'Sierra Leone', 'Sint Maarten (Dutch part)', 'Solomon Islands', 'Somalia', 'South Sudan', 'Sri Lanka', 'St. Kitts and Nevis', 'St. Lucia', 'St. Martin (French part)', 'St. Vincent and the Grenadines', 'Sudan', 'Suriname', 'Syrian Arab Republic', 'Tajikistan', 'Tanzania', 'Thailand', 'Timor-Leste', 'Togo', 'Tonga', 'Trinidad and Tobago', 'Tunisia', 'Turkmenistan', 'Turks and Caicos Islands', 'Tuvalu', 'Uganda', 'Ukraine', 'Uzbekistan', 'Vanuatu', 'Venezuela, RB', 'Virgin Islands (U.S.)', 'Yemen, Rep.', 'Zambia', 'Zimbabwe']\n",
      "\n",
      "['Australia', 'Austria', 'Belarus', 'Belgium', 'Canada', 'Cyprus', 'Denmark', 'Finland', 'France', 'Germany', 'Greece', 'Hong Kong SAR, China', 'Iceland', 'Ireland', 'Israel', 'Italy', 'Latvia', 'Lithuania', 'Luxembourg', 'Malta', 'Netherlands', 'New Zealand', 'Norway', 'Portugal', 'Qatar', 'Singapore', 'Slovenia', 'Spain', 'Sweden', 'Switzerland', 'United Arab Emirates', 'United Kingdom']\n",
      "\n",
      "['Central Europe and the Baltics', 'Bulgaria', 'Cambodia', 'Croatia', 'Czech Republic', 'Ecuador', 'Estonia', 'Honduras', 'Hungary', 'Mauritius', 'Morocco', 'Peru', 'Poland', 'Romania', 'Slovak Republic', 'South Africa', 'Uruguay', 'West Bank and Gaza']\n",
      "\n",
      "['Heavily indebted poor countries (HIPC)', 'IDA only', 'IDA total', 'Least developed countries: UN classification', 'Low income', 'Lower middle income', 'Pre-demographic dividend', 'South Asia', 'South Asia (IDA & IBRD)', 'Sub-Saharan Africa', 'Sub-Saharan Africa (excluding high income)', 'Sub-Saharan Africa (IDA & IBRD countries)']\n",
      "\n",
      "['Early-demographic dividend', 'East Asia & Pacific', 'East Asia & Pacific (excluding high income)', 'East Asia & Pacific (IDA & IBRD countries)', 'Euro area', 'Europe & Central Asia', 'European Union', 'IBRD only', 'Late-demographic dividend', 'North America']\n",
      "\n",
      "['Europe & Central Asia (excluding high income)', 'Latin America & Caribbean (excluding high income)', 'Brazil', 'Mexico', 'Russian Federation']\n",
      "\n",
      "['Bangladesh', 'Cameroon', 'Lesotho', 'Madagascar']\n",
      "\n",
      "['High income', 'OECD members', 'Post-demographic dividend']\n",
      "\n",
      "['Low & middle income', 'Middle income']\n",
      "\n",
      "['Japan', 'Korea, Rep.']\n",
      "\n",
      "['IDA & IBRD total']\n",
      "\n",
      "['Upper middle income']\n",
      "\n",
      "['World']\n",
      "\n",
      "['Argentina']\n",
      "\n",
      "['Chad']\n",
      "\n",
      "['China']\n",
      "\n",
      "['India']\n",
      "\n",
      "['Indonesia']\n",
      "\n",
      "['Iran, Islamic Rep.']\n",
      "\n",
      "['Lebanon']\n",
      "\n",
      "['Liberia']\n",
      "\n",
      "['Malawi']\n",
      "\n",
      "['Turkey']\n",
      "\n",
      "['United States']\n",
      "\n",
      "['Vietnam']\n"
     ]
    }
   ],
   "source": [
    "clusters = [[] for i in range(k)]\n",
    "for label, elem in zip(labels_data[\"2004\"].values, labels_data[\"2004\"].index):\n",
    "    clusters[label].append(elem)\n",
    "#print(*map(len, clusters.values()), sep='\\n')\n",
    "print(*clusters, sep='\\n\\n')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1960     1\n",
       "1961     0\n",
       "1962     0\n",
       "1963     0\n",
       "1964     0\n",
       "1965     0\n",
       "1966     0\n",
       "1967     0\n",
       "1968     0\n",
       "1969     0\n",
       "1970     0\n",
       "1971     0\n",
       "1972     0\n",
       "1973     0\n",
       "1974     0\n",
       "1975     0\n",
       "1976     0\n",
       "1977     0\n",
       "1978     0\n",
       "1979     0\n",
       "1980     0\n",
       "1981     0\n",
       "1982     0\n",
       "1983     0\n",
       "1984     0\n",
       "1985     0\n",
       "1986     0\n",
       "1987     0\n",
       "1988     0\n",
       "1989     0\n",
       "1990     0\n",
       "1991     0\n",
       "1992     4\n",
       "1993     1\n",
       "1994     1\n",
       "1995     0\n",
       "1996     1\n",
       "1997     2\n",
       "1998     1\n",
       "1999     1\n",
       "2000     3\n",
       "2001     0\n",
       "2002    11\n",
       "2003     6\n",
       "2004     5\n",
       "2005    11\n",
       "2006    13\n",
       "2007     9\n",
       "2008    10\n",
       "2009    11\n",
       "2010    21\n",
       "2011     7\n",
       "2012    22\n",
       "2013     1\n",
       "2014    21\n",
       "2015    22\n",
       "2016    19\n",
       "2017     1\n",
       "Name: Russian Federation, dtype: int64"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "labels_data.T[\"Russian Federation\"]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Совсем непонятно, что происходит. Кластеризация через single linkage и average linkage даёт ещё больше отдельно стоящих стран.\n",
    "\n",
    "Самая большая группа - возможно большинство относительно малоразвитых стран (в основном Африка) или страны, по которым мало данных (Россия до 1990-ых попадает сюда); <br> \n",
    "вторая группа - в основном Европа; <br>\n",
    "часто в отдельные группы выделяются не страны, а категории стран (в стиле 'Heavily indebted poor countries (HIPC)', 'Least developed countries: UN classification', 'Low income', и т.д.) <br>\n",
    "\n",
    "группы после 9-10 в основном отдельные страны, например, США всегда оказывается в отдельной группе. <br>\n",
    "Россия почему-то болтается между Европой и отдельной группой..."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# Не переживайте, мне тоже было тяжело разобраться с данными"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Контрольные вопросы\n",
    "Постарайтесь максимально развернуто и честно ответить на вопросы. Они охватывают тему алгоритмов кластеризации и скорее нужны преподавателям, чтобы понимать, что именно Вы усвоили плохо. Надеюсь, они подскажут, что именно в теме Вы не понимаете или наоборот порадают, что Вы все знаете ^_^"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* Опишите, пожалуйста, для каких прикладных задач Вы бы стали использовать методы кластеризации?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "***Ваш ответ здесь***\n",
    "* * Если стоит задача поиска закономерностей в данных, имеет смысл сначала попытаться разбить данные на кластеры.\n",
    "* * В информационном поиске бывает полезно кластеризовать выдачу, чтобы в топе не было очень похожих документов с максимальной релевантностью, а был адекватный разброс по возможным смыслам запроса."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* Какие преимущества и недостатки Вы видите у следуюших алгоритмов кластеризации: kmeans, dbscan, агломеративная кластеризация?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "***Ваш ответ здесь***\n",
    "* * <i>kmeans</i> имеет самую простую реализацию, но находит только кластеры одинаковой примерно сферической формы, для кластеров произвольной формы с большой вероятностью поделит данные криво. Также нужно заранее задавать число кластеров.\n",
    "* * <i>агломеративная кластеризация</i> позволяет один раз построить полное разбиение, нарисовать дендрограмму и потом уже выбрать адекватное число кластеров, однако имеет тенденцию к выделению очень мелких кластеров (~шум)\n",
    "* * <i>dbscan</i> не требует задавать заранее число кластеров, однако требует задать $\\epsilon$ и $M$, что может быть даже более сложно сделать для получения адекватных результатов, но зато может выделять кластеры совсем произвольной формы, если только плотность точек везде одинаковая\n",
    "* * * Есть ещё замечательный алгоритм <i>OPTICS</i>, придуманный ещё до 2000 года, который почему-то только сейчас хотят включить в sklearn. Он позволяет глазами увидеть кластерную структуру данных и вложенность кластеров,не очень долго работает и не очень сложный, непонятно, почему при всём этом он так мало распространён."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* На лекции было показано, что EM алгоритм находит оценку максимального правдоподобия в задаче со сккрытыми переменными. Из курса мат. статистики Вы можете знать, оценка максимального правдоподобия \"оптимальная\" во многих смыслах. В каких же случаях тогда не следует применять метод максимального правдоподобия?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "***Ваш ответ здесь***\n",
    "\n",
    "* * С матстатом у меня довольно плохо... Говорят, что оценка максимального правдоподобия может требовать очень большого количества данных для того, чтобы дать адекватный результат..."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* Многие алгоритмы анализа данных страдают \"проклятием\" размерности. Страдают ли этим проклятием алгоритмы кластеризации? Если да, то как бы Вы с этим боролись?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "***Ваш ответ здесь***\n",
    "\n",
    "* * Конечно страдают, поскольку суть проклятья размерности в том, что при большой размерности нужно собрать очень много данных для того, чтобы они не казались разреженными и можно было выделить кластеры. Нужно понижать размерность при помощи специальных методов (как в 9 лекции)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* Представьте, что у Вас есть набор текстовых документов, и Вы хотите разбить эти документы на тематики - новости, спорт, кулинария, кино и так далее. Размеченной выборки у Вас нет, только сами тексты документов. Какие алгоритмы и какие признаки Вы бы использовали для решения данной задачи?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "***Ваш ответ здесь***\n",
    "\n",
    "* * Можно попытаться кластеризовать документы, а затем вручную посмотреть на несколько документов из каждого класса и пометить весь класс предполагаемой меткой (говорят, что человек учится различать предметы примерно так же).\n",
    "* * В качестве признаков можно использовать мешок слов / n-граммы / tf-idf / волшебные векторизации (типа word2vec)\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* Теперь представьте, что небольшая часть Ваших текстов была размечена людьми, но большая часть так и осталась без таргета. Смогли ли бы Вы использовать эти данные для улучения качества кластеризации? (эта задача называется semi-supervised learning)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "***Ваш ответ здесь***\n",
    "\n",
    "* * Можно поступить как в предыдущем пункте, и присвоить кластерам самую частую метку из размеченных объектов в кластере.\n",
    "* * В итеративных алгоритмах типа kmeans и EM можно попытаться добавить к минимизируемому функционалу штраф в стиле RandIndex (пропорциональный числу пар из размеченных объектов с разными метками внутри одного кластера)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Здесь Вы можете оставить отзыв о этой домашней работе или о всем курсе.   "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "*** ВАШ ОТЗЫВ ЗДЕСЬ***"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
